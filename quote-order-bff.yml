openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/v1/quote-order-bff/quotes?pageNo=[pageNo]&pageSize=[pageSize]&site=[site]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - quote-handler
      operationId: getQuotes
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
        - in: query
          name: site
          required: false
          schema:
            $ref: '#/components/schemas/SitePage'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleList'
    post:
      tags:
        - quote-handler
      operationId: createQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
    put:
      tags:
        - quote-handler
      operationId: updateQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/quotes/{saleId}:
    get:
      tags:
        - quote-handler
      operationId: getQuote
      parameters:
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/quotes/customer/{customerId}?pageNo=[pageNo]&pageSize=[pageSize]&shipper=[shipper]&consignee=[consignee]&pickupDate=[pickupDate]&deliveryDate=[deliveryDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - customer-quotes-handler
      operationId: getCustomerQuotes
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleList'
    post:
      tags:
        - customer-quote-handler
      operationId: createCustomerQuote
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quotesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
    put:
      tags:
        - customer-quote-handler
      operationId: updateCustomerQuote
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quotesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/quotes/customer/{customerId}/quote/{saleId}:
    get:
      tags:
        - customer-quote-handler
      operationId: getCustomerQuote
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/orders?pageNo=[pageNo]&pageSize=[pageSize]&site=[site]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - order-handler
      operationId: getOrders
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
        - in: query
          name: site
          required: false
          schema:
            $ref: '#/components/schemas/SitePage'
      responses:
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleList'
    post:
      tags:
        - order-handler
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
    put:
      tags:
        - order-handler
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/orders/{saleId}:
    get:
      tags:
        - order-handler
      operationId: getOrder
      parameters:
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/orders/customer/{customerId}?pageNo=[pageNo]&pageSize=[pageSize]&shipper=[shipper]&consignee=[consignee]&pickupDate=[pickupDate]&deliveryDate=[deliveryDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrders
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleList'
    post:
      tags:
        - customer-order-handler
      operationId: createCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
    put:
      tags:
        - customer-order-handler
      operationId: updateCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/autotransport/quote-order-bff/orders/customer/{customerId}/order/{saleId}:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/quote-order-bff/rateschedules/customer/{customerId}?rateType=[rateType]&originCoordinateId=[originCoordinateId]&destinationCoordinateId=[destinationCoordinateId]&chargeNames=[chargeNames]:
    get:
      tags:
        - rate-handler
      operationId: getWeightRates
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: rateType
          required: true
          schema:
            type: string
        - in: path
          name: originCoordinateId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: destinationCoordinateId
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: chargeNames
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ChargeType'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorRateSchedules'
  /api/v1/quote-order-bff/triprates?pageNo=[pageNo]&pageSize=[pageSize]&vendorId=[vendorId]&bidOrderCenterId=[bidOrderCenterId]&site=[site]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - tripRate-controller
      operationId: getTripRates
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: vendorId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: bidOrderCenterId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
        - in: query
          name: site
          required: false
          schema:
            $ref: '#/components/schemas/SitePage'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripRateList'
##############################
components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        url:
          type: string
    SitePage:
      type: string
      enum:
        - tracking
        - delivery
        - pickup
        - spotquote
        - confirmation
        - booking
        - availability
        - history
        - pending
    SaleList:
      type: object
      properties:
        count:
          type: integer
          format: int64
        sales:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
    TripRateList:
      type: object
      properties:
        count:
          type: integer
          format: int64
        tripRates:
          type: array
          items:
            $ref: '#/components/schemas/TripRate'
    Sale:
      required: [ saleType, customerId ]
      type: object
      properties:
        saleId:
          type: integer
          format: int64
        saleType:
          type: string
          pattern: '^[O|Q]$'
        customerId:
          type: integer
          format: int64
        salesNumber:
          description: the number that is display on the ticket to identify the sales
          type: integer
          format: int64
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        saleRates:
          type: array
          items:
            $ref: '#/components/schemas/SaleRate'
        searchedBid:
          type: boolean
        searchedLeg:
          type: boolean
    Shipment:
      required: [ shipper, consignee, shipmentDetails, isInsured ]
      type: object
      properties:
        shipmentId:
          type: integer
          format: int64
        salesNumber:
          description: the number that is display on the ticket to identify the shipment
          type: integer
          format: int64
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        shipmentDetails:
          $ref: '#/components/schemas/ShipmentDetails'
        isInsured:
          type: boolean
        insurance:
          $ref: '#/components/schemas/Insurance'
        customBroker:
          $ref: '#/components/schemas/CustomBroker'
    Coordinate:
      required: [ coordinateName, longitude, latitude, radius, directions ]
      type: object
      properties:
        coordinateId:
          type: integer
          format: int64
        coordinateName:
          type: string
          maxLength: 85
        location:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        radius:
          type: number
        radiusUnit:
          $ref: '#/components/schemas/RadiusUnit'
        directions:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
        timeZoneId:
          type: string
    Direction:
      type: string
      enum: [ ORG, DST ]
    RadiusUnit:
      type: string
      enum: [ KM, MI ]
    SaleAddress:
      required: [ address, fromDate, toDate, locationType, coordinate ]
      type: object
      properties:
        saleAddressId:
          type: integer
          format: int64
        companyName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        locationType:
          $ref: '#/components/schemas/LocationType'
        contact:
          $ref: '#/components/schemas/Contact'
        readyTime:
          type: string
        closeTime:
          type: string
        additionalServices:
          type: array
          items:
            $ref: '#/components/schemas/ChargeType'
        coordinate:
          $ref: '#/components/schemas/Coordinate'
    Contact:
      required: [ contact, contactComm ]
      type: object
      properties:
        contactId:
          type: integer
          format: int64
        contact:
          $ref: '#/components/schemas/Person'
        contactComm:
          $ref: '#/components/schemas/Communication'
        contactAdd:
          $ref: '#/components/schemas/Address'
        functionTitle:
          type: array
          items:
            $ref: '#/components/schemas/FunctionTitle'
        username:
          type: string
          maxLength: 255
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        isUser:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    FunctionTitle:
      type: string
      enum: [ OWNR, COOW, VP, CNTRLR, SALESREP, PSQUOTE, CUSTSRVC, PODRQ, OPSMNGR, SPVSR, MNGR, OSDCLM, ACCPYBL, TRFC, LOGT, BLNG, SHPRECEV, WHMNGR, WH, OPER, SAFE, DISP, TERM ]
    Notification:
      type: string
      enum:
        - ORDER_BOOKED
        - PICKED_UP
        - IN_TRANSIT
        - CUSTOMS_RELEASED
        - OUT_FOR_DELIVERY
        - DELIVERED
        - RECEIVE_INVOICE
        - RECEIVE_STATEMENT
        - SHIPMENT_TRACKING
        - BOOKING
        - AFTER_HOUR_TRACKING
        - BID
        - POD_REQUEST
        - INVOICE
        - STATEMENT
        - CLAIMS
    Role:
      type: string
      enum:
        - Cognito_customer_admin_role
        - Cognito_customer_superUserAuth_Role
        - Cognito_customer_readUnauth_Role
        - Cognito_customer_readAuth_Role
        - internal_accouting_user
        - internal_admin
        - internal_superUser
        - internal_support_user
        - internal_user
        - sysadmin
        - Cognito_vendor_superUserAuth_Role
        - Cognito_vendor_readUnauth_Role
        - Cognito_vendor_readAuth_Role
    Communication:
      required: [ telephone ]
      type: object
      properties:
        commId:
          type: integer
          format: int64
        telephone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        extension:
          type: string
          maxLength: 7
          pattern: '^\d{0,7}$'
        cell:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        tollFree:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        fax:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        email:
          type: string
          maxLength: 255
        website:
          type: string
          maxLength: 255
    Person:
      required: [ firstName, lastName ]
      type: object
      properties:
        personId:
          type: integer
          format: int64
        firstName:
          type: string
          maxLength: 100
        initial:
          type: string
          maxLength: 5
        middleName:
          type: string
          maxLength: 100
        lastName:
          type: string
          maxLength: 100
    ChargeType:
      type: string
      enum:
        - APP
        - LFT
        - INSD
        - DRS
        - WGV
        - ACC
        - RES
        - JOB
        - TRDS
        - INSE
        - INSS
        - APPF
        - LFTF
        - INSF
        - RESD
        - LTLFS
        - TLFS
        - WTIM
        - MP
        - MD
        - AHP
        - AHD
        - TONU
        - HZMT
        - TMPC
        - ISW
        - BISP
        - STRG
    ChargeUnit:
      type: string
      enum:
        - CWT
        - PU
        - TIME
        - FIX
        - PFR
        - SQ
    Address:
      required: [ add, city, postalZipCode, provinceState, country ]
      type: object
      properties:
        addId:
          type: integer
          format: int64
        add:
          type: string
        add2:
          type: string
        city:
          type: string
        postalZipCode:
          type: string
        provinceState:
          type: string
        country:
          type: string
    ShipmentDetails:
      required:
        [ numberPieces, shipmentType, packageCharacteristic, isFreezeProtect, isTempControl, docOnly, isStackable ]
      type: object
      properties:
        shipmentDetailsId:
          type: integer
          format: int64
        numberPieces:
          type: integer
          format: int32
        totalActualLinearFeet:
          type: number
        totalActualWeight:
          type: number
        shipmentType:
          $ref: '#/components/schemas/ShipmentCategory'
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        packageCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/PackageCharacteristic'
        isFreezeProtect:
          type: boolean
        isTempControl:
          type: boolean
        isStackable:
          type: boolean
        tempUnit:
          $ref: '#/components/schemas/Temperature'
        tempMin:
          type: integer
          format: int32
        tempMax:
          type: integer
          format: int32
        docOnly:
          type: boolean
    PackageCharacteristic:
      required:
        [ numberPkg, description, length, width, height, weight, freightClass, nmfc, numberPieces, isHazMat ]
      type: object
      properties:
        packageCharacteristicId:
          type: integer
          format: int64
        numberPkg:
          type: integer
        description:
          type: string
        length:
          type: number
        width:
          type: number
        height:
          type: number
        weight:
          type: number
        hsCode:
          type: string
          pattern: '^[0-9]{0,10}'
        nmfc:
          type: string
          pattern: '^[0-9]{0,6}'
        freightClass:
          type: string
          pattern: '^[0-9]{0,3}'
        sub:
          type: string
          pattern: '^[0-9]{0,1}'
        hazMat:
          $ref: '#/components/schemas/HazMat'
        emergencyTel:
          type: string
          maxLength: 10
          pattern: '^[0-9]{10}$'
        emergencyContact:
          type: string
          maxLength: 50
        numberPieces:
          type: integer
          format: int32
        isHazMat:
          type: boolean
    Temperature:
      type: string
      enum:
        - F
        - C
    LocationType:
      type: string
      enum:
        - BUS
        - RES_APP
        - RES_HOU
        - OTR_JS
        - OTR_CC
        - OTR_OB
        - OTR_HTL
        - OTR_SHL
    ShipmentCategory:
      type: string
      enum:
        - PAL #Palette / SKD
        - CRT #Crate
        - FLL #Floor Loaded
        - BDL #Bundle
        - BLS #Bales
        - RLL #Rolls
        - CTN #Cartons
        - C20 #Container 20
        - C40 #Container 40
        - FTF #Full Truck Floor
        - FTP #Full Truck Palette
        - HLY #Hourly
        - FSV #Full Service (User Intervention Required)
        - LTR #Letter
        - PCK #Pack
        - PCL #Parcel
    HazMat:
      type: object
      properties:
        hazmatId:
          type: integer
          format: int64
        hazmatClass:
          type: string
        hazmatSubClass:
          type: string
        un:
          type: string
        packageGroup:
          type: string
    Insurance:
      type: object
      properties:
        insuranceId:
          type: integer
          format: int64
        totalCostValue:
          type: number
        currency:
          type: string
        insuranceType:
          type: string
    SaleRate:
      type: object
      properties:
        saleRateId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        pricing:
          $ref: '#/components/schemas/Pricing'
        transactionRateType:
          $ref: '#/components/schemas/TransactionRateType'
        shipmentRates:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentRate'
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        shipmentCombinations:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentCombination'
    ShipmentCombination:
      properties:
        shipmentCombinationId:
          type: integer
          format: int64
        vendorIds:
          type: array
          items:
            type: integer
            format: int64
        vendorShipments:
          type: array
          items:
            $ref: '#/components/schemas/VendorShipments'
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
    VendorShipments:
      properties:
        vendorShipmentsId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        shipmentRates:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentRate'
    ShipmentRate:
      type: object
      properties:
        shipmentRateId:
          type: integer
          format: int64
        shipmentId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        routeIndex:
          type: integer
          format: int64
        shipmentReferenceNumber:
          type: string
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        pricing:
          $ref: '#/components/schemas/Pricing'
          description: equivalent to revenue
        pickupDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        pickupWindow:
          type: integer
          format: int64
        expirationDate:
          type: string
          format: date-time
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        tripRates:
          type: array
          items:
            $ref: '#/components/schemas/TripRate'
    TransactionRateType:
      type: string
      enum: [ CUST_RS, VEND_RS, VEND_BID, VEND_LEG, MAN_SHMT, EMPTY ]
    TripRate:
      type: object
      properties:
        tripRateId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        routeIndex:
          type: integer
          format: int64
        carrierRefNumber:
          type: string
        vendorId:
          type: integer
          format: int64
        bidOrderCenterId:
          type: integer
          format: int64
        vendorName:
          type: string
        bidOrderCenterName:
          type: string
        pricing:
          $ref: '#/components/schemas/Pricing'
          description: equivalent to expenses
        createdTimestamp:
          description: timestamp of the creation of the trip
          type: string
          format: date-time
        updateTimestamp:
          description: timestamp of the last update of the trip
          type: string
          format: date-time
        pickupDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        pickupWindow:
          type: integer
          format: int64
        expirationDate:
          type: string
          format: date-time
        transactionRateType:
          $ref: '#/components/schemas/TransactionRateType'
        transporterType:
          $ref: '#/components/schemas/TransporterType'
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        shipmentDetails:
          $ref: '#/components/schemas/ShipmentDetails'
        customBroker:
          $ref: '#/components/schemas/CustomBroker'
        bookingRequirements:
          $ref: '#/components/schemas/BookingRequirements'
        podFile:
          type: string
          format: byte
    Pricing:
      type: object
      properties:
        pricingId:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        baseCharge:
          description: price of the base charge
          type: number
        surcharges:
          description: List of surchages
          type: array
          items:
            $ref: '#/components/schemas/Charge'
        fuelCharge:
          description: charges of fuel
          type: number
        additionalFees:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalCharge'
        subPrice:
          description: All charges and fees added up
          type: number
        taxation:
          $ref: '#/components/schemas/Taxation'
        totalPrice:
          description: Price of the rate
          type: number
    AdditionalCharge:
      type: object
      properties:
        additionalChargeId:
          type: integer
          format: int64
        chargeType:
          $ref: '#/components/schemas/ChargeType'
        numberOfUnit:
          type: number
        totalPrice:
          type: number
        description:
          type: string
    BookingRequirements:
      type: object
      properties:
        referenceTracking:
          type: string
        truck:
          type: string
        trailer:
          type: string
        driverCellPhone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        linkForSatelliteTracker:
          type: string
        borderCrossing:
          type: string
        papsNumber:
          type: number
        borderETA:
          type: string
    VendorRateSchedules:
      type: object
      properties:
        vendorDef:
          $ref: '#/components/schemas/VendorDef'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/Tariff'
    Tariff:
      required: [ rateType, rateMeasure, price, vendors ]
      type: object
      properties:
        tariffId:
          type: integer
          format: int64
        rateType:
          $ref: '#/components/schemas/RateType'
        rateMeasure:
          type: string
          maxLength: 5
        price:
          type: number
    RateType:
      type: string
      enum:
        - FX
        - WT
        - SK
    VendorDef:
      type: object
      properties:
        vendorId:
          type: integer
          format: int64
        vendorName:
          type: string
        bidOrderCenterId:
          type: integer
          format: int64
        bidOrderCenterName:
          type: string
    RateStatus:
      type: string
      enum:
        - QUOTE # Rate initial state when created
        - REQUESTED # A bid or an availability is requested to the vendor
        - ACCEPTED # Vendor trip is accepted by customer
        - CANCELLED # Vendor trip is rejected by customer
        - READY # Package is ready to pick up
        - BIDDED # Vendor summited a price for the trip (bidding process)
        - EXPIRED # Vendor time expired for bidding process
        - BOOKED # The trip is booked with the vendor
        - PICKED_UP # The package is picked up from source address
        - DELIVERED # The package is delivered
        - IN_TRANSIT # On route to destination
        - OUT_FOR_DELIVERY # The package is out for delivery
        - COMPLETED # The package is delivered, invoice paid and received payment from customer
        - REJECTED # Vendor cancel (reject) trip rate
        - LEG_REJ # TripRate that has another trip rate rejected in the shipmentrate
        - LEG_EXP # TripRate that has another trip rate expired in the shipmentrate
        - MBB_EXP # Must book by expired - or pickup windows not respected.
        - MBB_CXL # Must book by canceled
    CustomBroker:
      required: [ country, brokerName, accountNumber, primaryContact ]
      type: object
      properties:
        customBrokerId:
          type: integer
          format: int64
        country:
          type: string
          maxLength: 3
          pattern: '^[A-Z]{3}$'
        brokerName:
          type: string
        accountNumber:
          type: string
          pattern: '^\d{12}'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        alternateContact:
          $ref: '#/components/schemas/Contact'
    EquipmentType:
      type: string
      enum: [ CVAN_CARG, CVAN_LRG, CVAN_NOREEF, FBED_53, FBED_48, FBED_SD, FBED_DD, FBED_ROLLTT, FBED_RT, FBED_FLOATS, FBED_LB, FBED_RGN, FBED_CHAS, FBED_CSTG ]
    TransporterType:
      type: string
      enum: [ STD, DIR, EXP ]
    Country:
      type: string
      enum: [ CAN, USA ]
      x-enum-varnames: [ CANADA, UNITED_STATES_AMERICA ]
    ProvinceState:
      type: string
      enum: [ AL, AK, AZ, AR, AS, CA, CO, CT, DE, DC, FL, GA, GU, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, MP, OH, OK, OR, PA, PR, RI, SC, SD, TN, TX, TT, UT, VT, VA, VI, WA, WV, WI, WY, NL, PE, NS, NB, QC, 'ON', MB, SK, AB, BC, YT, NT, NU ]
      x-enum-varnames: [ ALABAMA, ALASKA, ARIZONA, ARKANSAS, AMERICAN_SAMOA, CALIFORNIA, COLORADO, CONNECTICUT, DELAWARE, DISTRICT_OF_COLUMBIA, FLORIDA, GEORGIA, GUAM, HAWAII, IDAHO, ILLINOIS, INDIANA, IOWA, KANSAS, KENTUCKY, LOUISIANA, MAINE, MARYLAND, MASSACHUSETTS, MICHIGAN, MINNESOTA, MISSISSIPPI, MISSOURI, MONTANA, NEBRASKA, NEVADA, NEW_HAMPSHIRE, NEW_JERSEY, NEW_MEXICO, NEW_YORK, NORTH_CAROLINA, NORTH_DAKOTA, NORTHERN_MARIANA_ISLANDS, OHIO, OKLAHOMA, OREGON, PENNSYLVANIA, PUERTO_RICO, RHODE_ISLAND, SOUTH_CAROLINA, SOUTH_DAKOTA, TENNESSEE, TEXAS, TRUST_TERRITORIES, UTAH, VERMONT, VIRGINIA, VIRGIN_ISLANDS, WASHINGTON, WEST_VIRGINIA, WISCONSIN, WYOMING, NEWFOUNDLAND_AND_LABRADOR, PRINCE_EDWARD_ISLAND, NOVA_SCOTIA, NEW_BRUNSWICK, QUEBEC, ONTARIO, MANITOBA, SASKATCHEWAN, ALBERTA, BRITISH_COLUMBIA, YUKON, NORTHWEST_TERRITORIES, NUNAVUT ]
    Charge:
      type: object
      properties:
        chargeId:
          type: integer
          format: int64
        chargeType:
          $ref: '#/components/schemas/ChargeType'
        numberOfUnit:
          type: number
        totalPrice:
          type: number
        description:
          type: string
    Taxation:
      type: object
      properties:
        taxationId:
          type: integer
          format: int64
        country:
          $ref: '#/components/schemas/Country'
        provState:
          $ref: '#/components/schemas/ProvinceState'
        tax1Label:
          type: string
        tax1Pct:
          type: number
        tax1Price:
          type: number
        tax2Label:
          type: string
        tax2Pct:
          type: number
        tax2Price:
          type: number
    Currency:
      type: string
      enum: [ CAD, USD ]