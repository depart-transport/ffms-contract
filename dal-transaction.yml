openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/v1/autotransport/transaction/sales/count?saleType=[saleType]?pageNo=[pageNo]&pageSize=[pageSize]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - sale-handler
      operationId: getSalesCount
      parameters:
        - in: query
          name: saleType
          required: true
          schema:
            type: string
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/v1/autotransport/transaction/sales?saleType=[saleType]&&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - sale-handler
      operationId: getSales
      parameters:
        - in: query
          name: saleType
          required: true
          schema:
            type: string
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
    post:
      tags:
        - sale-handler
      operationId: createSale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
    put:
      tags:
        - sale-handler
      operationId: updateSale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/autotransport/transaction/sales/{saleId}:
    get:
      tags:
        - sale-handler
      operationId: getSale
      parameters:
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/autotransport/transaction/sales/customer/{customerId}?saleType=[saleType]?pageNo=[pageNo]&pageSize=[pageSize]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - customer-sales-handler
      operationId: getCustomerSales
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: saleType
          required: true
          schema:
            type: string
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
  /api/v1/autotransport/transaction/sales/customer/{customerId}/count?saleType=[saleType]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - customer-sales-handler
      operationId: getCustomerSalesCount
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: saleType
          required: true
          schema:
            type: string
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/v1/autotransport/transaction/sales/customer/{customerId}/sale/{saleId}:
    get:
      tags:
        - customer-sale-handler
      operationId: getCustomerSale
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
  /api/v1/autotransport/transaction/triprates?pageNo=[pageNo]&pageSize=[pageSize]&vendorId=[vendorId]&bidOrderCenterId=[bidOrderCenterId]&site=[site]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - tripRate-controller
      operationId: getTripRates
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: vendorId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: bidOrderCenterId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripRate'
    put:
      tags:
        - tripRate-controller
      operationId: updateRates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TripRate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripRate'
    post:
      tags:
        - tripRate-controller
      operationId: createsRates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TripRate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripRate'
  /api/v1/autotransport/transaction/triprates/count?pageNo=[pageNo]&pageSize=[pageSize]&vendorId=[vendorId]&bidOrderCenterId=[bidOrderCenterId]&site=[site]&shipper=[shipper]&consignee=[consignee]&pickupStartDate=[pickupStartDate]&pickupEndDate=[pickupEndDate]&deliveryStartDate=[deliveryStartDate]&deliveryEndDate=[deliveryEndDate]&saleRepresentative=[saleRepresentative]&status=[status]:
    get:
      tags:
        - tripRate-controller
      operationId: countTripRates
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: vendorId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: bidOrderCenterId
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: shipper
          required: false
          schema:
            type: string
        - in: query
          name: consignee
          required: false
          schema:
            type: string
        - in: query
          name: pickupStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: pickupEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryStartDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: deliveryEndDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: saleRepresentative
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RateStatus'
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripRate'
##############################
components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        url:
          type: string
    Sale:
      required: [ saleType, customerId ]
      type: object
      properties:
        saleId:
          type: integer
          format: int64
        saleType:
          type: string
          pattern: '^[O|Q]$'
        customerId:
          type: integer
          format: int64
        salesNumber:
          description: the number that is display on the ticket to identify the sales
          type: integer
          format: int64
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        saleRates:
          type: array
          items:
            $ref: '#/components/schemas/SaleRate'
        searchedBid:
          type: boolean
        searchedLeg:
          type: boolean
    Shipment:
      required: [ shipper, consignee, shipmentDetails, isInsured ]
      type: object
      properties:
        shipmentId:
          type: integer
          format: int64
        salesNumber:
          description: the number that is display on the ticket to identify the shipment
          type: integer
          format: int64
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        shipmentDetails:
          $ref: '#/components/schemas/ShipmentDetails'
        isInsured:
          type: boolean
        insurance:
          $ref: '#/components/schemas/Insurance'
        customBroker:
          type: integer
          format: int64
    SaleAddress:
      required:
        [ address, fromDate, toDate, locationType, phone, email ]
      type: object
      properties:
        saleAddressId:
          type: integer
          format: int64
        companyName:
          type: string
        address:
          type: integer
          format: int64
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        locationType:
          $ref: '#/components/schemas/LocationType'
        contact:
          type: integer
          format: int64
        readyTime:
          type: string
        closeTime:
          type: string
        additionalServices:
          type: array
          items:
            $ref: '#/components/schemas/ChargeType'
        coordinate:
          type: integer
          format: int64
    ChargeType:
      type: string
      enum:
        - APP
        - LFT
        - INSD
        - DRS
        - WGV
        - ACC
        - RES
        - JOB
        - TRDS
        - INSE
        - INSS
        - APPF
        - LFTF
        - INSF
        - RESD
        - LTLFS
        - TLFS
        - WTIM
        - MP
        - MD
        - AHP
        - AHD
        - TONU
        - HZMT
        - TMPC
        - ISW
        - BISP
        - STRG
    ChargeUnit:
      type: string
      enum:
        - CWT
        - PU
        - TIME
        - FIX
        - PFR
        - SQ
    ShipmentDetails:
      required: [ numberPieces, shipmentType, packageCharacteristic, isFreezeProtect, isTempControl, docOnly, isStackable ]
      type: object
      properties:
        shipmentDetailsId:
          type: integer
          format: int64
        numberPieces:
          type: integer
          format: int32
        totalActualLinearFeet:
          type: number
        totalActualWeight:
          type: number
        shipmentType:
          $ref: '#/components/schemas/ShipmentCategory'
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        packageCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/PackageCharacteristic'
        isFreezeProtect:
          type: boolean
        isTempControl:
          type: boolean
        isStackable:
          type: boolean
        tempUnit:
          $ref: '#/components/schemas/Temperature'
        tempMin:
          type: integer
          format: int32
        tempMax:
          type: integer
          format: int32
        docOnly:
          type: boolean
    PackageCharacteristic:
      required: [ numberPkg, description, length, width, height, weight, freightClass, nmfc, isHazMat, numberPieces ]
      type: object
      properties:
        packageCharacteristicId:
          type: integer
          format: int64
        isStackable:
          type: boolean
        numberPkg:
          type: integer
        description:
          type: string
        length:
          type: number
        width:
          type: number
        height:
          type: number
        weight:
          type: number
        hsCode:
          type: string
          pattern: '^[0-9]{0,10}'
        nmfc:
          type: string
          pattern: '^[0-9]{0,6}'
        freightClass:
          type: string
          pattern: '^[0-9]{0,3}'
        sub:
          type: string
          pattern: '^[0-9]{0,1}'
        hazMat:
          $ref: '#/components/schemas/HazMat'
        emergencyTel:
          type: string
          maxLength: 10
          pattern: '^[0-9]{10}$'
        emergencyContact:
          type: string
          maxLength: 50
        numberPieces:
          type: integer
          format: int32
        isHazMat:
          type: boolean
    Temperature:
      type: string
      enum:
        - F
        - C
    LocationType:
      type: string
      enum:
        - BUS
        - RES_APP
        - RES_HOU
        - OTR_JS
        - OTR_CC
        - OTR_OB
        - OTR_HTL
        - OTR_SHL
    ShipmentCategory:
      type: string
      enum:
        - PAL #Palette / SKD
        - CRT #Crate
        - FLL #Floor Loaded
        - BDL #Bundle
        - BLS #Bales
        - RLL #Rolls
        - CTN #Cartons
        - C20 #Container 20
        - C40 #Container 40
        - FTF #Full Truck Floor
        - FTP #Full Truck Palette
        - HLY #Hourly
        - FSV #Full Service (User Intervention Required)
        - LTR #Letter
        - PCK #Pack
        - PCL #Parcel
    HazMat:
      type: object
      properties:
        hazmatId:
          type: integer
          format: int64
        hazmatClass:
          type: string
        hazmatSubClass:
          type: string
        un:
          type: string
        packageGroup:
          type: string
    Insurance:
      type: object
      properties:
        insuranceId:
          type: integer
          format: int64
        totalCostValue:
          type: number
        currency:
          type: string
        insuranceType:
          type: string
    SaleRate:
      type: object
      properties:
        saleRateId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        pricing:
          $ref: '#/components/schemas/Pricing'
        transactionRateType:
          $ref: '#/components/schemas/TransactionRateType'
        shipmentRates:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentRate'
        additionalFees:
          type: array
          items:
            $ref: '#/components/schemas/Fees'
    ShipmentRate:
      type: object
      properties:
        shipmentRateId:
          type: integer
          format: int64
        shipmentId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        routeIndex:
          type: integer
          format: int64
        shipmentRateNumber:
          type: string
        shipmentReferenceNumber:
          type: string
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        pricing:
          $ref: '#/components/schemas/Pricing'
        pickupDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        pickupWindow:
          type: integer
          format: int64
        expirationDate:
          type: string
          format: date-time
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        tripRates:
          type: array
          items:
            $ref: '#/components/schemas/TripRate'
    Pricing:
      type: object
      properties:
        price:
          description: Price of the rate
          type: number
        baseCharge:
          description: price of the base charge
          type: number
        fuelCharges:
          description: charges of fuel
          type: number
        surcharges:
          description: price of the surcharge
          type: number
    Fees:
      type: object
      properties:
        feesId:
          type: integer
          format: int64
        chargeName:
          $ref: '#/components/schemas/ChargeType'
        chargeMethod:
          $ref: '#/components/schemas/ChargeUnit'
        freeUpTo:
          type: number
        price:
          type: number
        maxPrice:
          type: number
    TransactionRateType:
      type: string
      enum: [ CUST_RS, VEND_RS, VEND_BID, VEND_LEG, MAN_SHMT ]
    TripRate:
      type: object
      properties:
        tripRateId:
          type: integer
          format: int64
        salesNumber:
          type: integer
          format: int64
        routeIndex:
          type: integer
          format: int64
        carrierRefNumber:
          type: string
        vendorId:
          type: integer
          format: int64
        bidOrderCenterId:
          type: integer
          format: int64
        customBroker:
          type: integer
          format: int64
        pricing:
          $ref: '#/components/schemas/Pricing'
        createdTimestamp:
          description: timestamp of the creation of the trip
          type: string
          format: date-time
        updateTimestamp:
          description: timestamp of the last update of the trip
          type: string
          format: date-time
        pickupDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        departureDate:
          type: string
          format: date
        pickupWindow:
          type: integer
          format: int64
        expirationDate:
          type: string
          format: date-time
        transactionRateType:
          $ref: '#/components/schemas/TransactionRateType'
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        shipper:
          $ref: '#/components/schemas/SaleAddress'
        consignee:
          $ref: '#/components/schemas/SaleAddress'
        shipmentDetails:
          $ref: '#/components/schemas/ShipmentDetails'
        bookingRequirements:
          $ref: '#/components/schemas/BookingRequirements'
        podFile:
          type: string
          format: byte
    BookingRequirements:
      type: object
      properties:
        referenceTracking:
          type: string
        truck:
          type: string
        trailer:
          type: string
        driverCellPhone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        linkForSatelliteTracker:
          type: string
        bordeCrossing:
          type: string
        papsNumber:
          type: number
        borderETA:
          type: string
    RateStatus:
      type: string
      enum:
        - QUOTE # Rate initial state when created
        - REQUESTED # A bid or an availability is requested to the vendor
        - ACCEPTED # Vendor trip is accepted by customer
        - CANCELLED # Vendor trip is rejected by customer
        - READY # Package is ready to pick up
        - BIDDED # Vendor summited a price for the trip (bidding process)
        - EXPIRED # Vendor time expired for bidding process
        - BOOKED # The trip is booked with the vendor
        - PICKED_UP # The package is picked up from source address
        - DELIVERED # The package is delivered
        - IN_TRANSIT # On route to destination
        - OUT_FOR_DELIVERY # The package is out for delivery
        - COMPLETED # The package is delivered, invoice paid and received payment from customer
        - REJECTED # Vendor cancel (reject) trip rate
        - LEG_REJ # TripRate that has another trip rate rejected in the shipmentrate
        - LEG_EXP # TripRate that has another trip rate expired in the shipmentrate
        - MBB_EXP # Must book by expired - or pickup windows not respected.
        - MBB_CXL # Must book by canceled
    EquipmentType:
      type: string
      enum: [ CVAN_CARG, CVAN_LRG, CVAN_NOREEF, FBED_53, FBED_48, FBED_SD, FBED_DD, FBED_ROLLTT, FBED_RT, FBED_FLOATS, FBED_LB, FBED_RGN, FBED_CHAS, FBED_CSTG ]