openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/identification-bff/customers?pageNo=[pageNo]&pageSize=[pageSize]&firstName=[firstName]&lastName=[lastName]&userName=[userName]&businessName=[businessName]&status=[status]&address=[address]&customBroker=[customBroker]:
    get:
      tags:
        - customer-controller
      operationId: getCustomers
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - in: query
          name: firstName
          required: false
          schema:
            type: string
        - in: query
          name: lastName
          required: false
          schema:
            type: string
        - in: query
          name: userName
          required: false
          schema:
            type: string
        - in: query
          name: businessName
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            $ref: '#/components/schemas/BusinessStatus'
        - in: query
          name: address
          required: false
          schema:
            type: string
        - in: query
          name: customBroker
          required: false
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerList'
    put:
      tags:
        - customer-controller
      operationId: saveCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerUpdate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/identification-bff/customers/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/identification-bff/vendors?pageNo=[pageNo]&pageSize=[pageSize]&firstName=[firstName]&lastName=[lastName]&userName=[userName]&businessName=[businessName]&status=[status]&address=[address]:
    get:
      tags:
        - vendor-handler
      operationId: getVendors
      parameters:
        - in: query
          name: pageNo
          required: false
          schema:
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - in: query
          name: firstName
          required: false
          schema:
            type: string
        - in: query
          name: lastName
          required: false
          schema:
            type: string
        - in: query
          name: userName
          required: false
          schema:
            type: string
        - in: query
          name: businessName
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            $ref: '#/components/schemas/BusinessStatus'
        - in: query
          name: address
          required: false
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorList'
    put:
      tags:
        - vendor-handler
      operationId: saveVendor
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VendorUpdate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
    post:
      tags:
        - vendor-handler
      operationId: createVendor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
  /api/v1/identification-bff/vendors/{id}:
    get:
      tags:
        - vendor-handler
      operationId: getVendor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
  /api/v1/identification-bff/vendors/name:
    get:
      tags:
        - vendorDef-handler
      operationId: getVendorDefs
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorDef'
  /api/v1/identification-bff/coordinates:
    post:
      tags:
        - coordinate-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordinate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
    put:
      tags:
        - coordinate-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordinate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
  /api/v1/identification-bff/coordinates/{id}:
    get:
      tags:
        - coordinate-handler
      operationId: getCoordinate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
    delete:
      tags:
        - coordinate-handler
      operationId: deleteCoordinate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
  /api/v1/identification-bff/bidordercenters:
    get:
      tags:
        - bidOrderCenter-controller
      operationId: getBidOrderCenters
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BidOrderCenter'
  /api/v1/identification-bff/bidordercenters/{id}:
    get:
      tags:
        - bidOrderCenter-controller
      operationId: getBidOrderCenter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidOrderCenter'
    put:
      tags:
        - bidOrderCenter-controller
      operationId: putBidOrderCenter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BidOrderCenter'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidOrderCenter'
  /api/v1/identification-bff/locations/public:
    get:
      tags:
        - location-handler
      operationId: getPublicLocations
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        url:
          type: string
    AccessoryCharge:
      type: object
      properties:
        accessoryChargeId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        chargeName:
          $ref: '#/components/schemas/ChargeType'
        chargeMethod:
          $ref: '#/components/schemas/ChargeUnit'
        freeUpTo:
          type: number
        price:
          type: number
        maxPrice:
          type: number
        minPrice:
          type: number
        percentage:
          type: number
        description:
          type: string
        status:
          type: boolean
        originCode:
          type: string
        destinationCode:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        createDate:
          type: string
          format: date-time
        createUser:
          type: string
        lastUpdate:
          type: string
          format: date-time
        lastUserUpdate:
          type: string
        version:
          type: integer
    ChargeUnit:
      type: string
      enum:
        - OTHER
        - CWT
        - PU
        - TIME
        - FIX
        - PFR
        - SQ
    ChargeType:
      type: string
      enum:
        - OTHER
        - APP
        - LFT
        - INSD
        - DRS
        - WGV
        - ACC
        - RES
        - JOB
        - TRDS
        - INSE
        - INSS
        - APPF
        - LFTF
        - INSF
        - RESD
        - LTLFS
        - TLFS
        - WTIM
        - MP
        - MD
        - AHP
        - AHD
        - TONU
        - HZMT
        - TMPC
        - ISW
        - BISP
        - STRG
    Address:
      required: [ add, city, postalZipCode, provinceState, country ]
      type: object
      properties:
        addId:
          type: integer
          format: int64
        add:
          type: string
        add2:
          type: string
        city:
          type: string
        postalZipCode:
          type: string
        provinceState:
          type: string
        country:
          type: string
    BankAccount:
      required: [ branchName, institution, transit, account, address, comm, contact ]
      type: object
      properties:
        bankAccountId:
          type: integer
          format: int64
        branchName:
          type: string
        institution:
          type: string
          maxLength: 9
        transit:
          type: string
          maxLength: 9
        account:
          type: string
          maxLength: 17
        swiftCode:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        comm:
          $ref: '#/components/schemas/Communication'
        contact:
          $ref: '#/components/schemas/Person'
    Billing:
      required: [ creditStatus, currency, podRequirement, payment, isSameBillAdd, payableCreditCard ]
      type: object
      properties:
        billingId:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        isSameBillAdd:
          type: boolean
        creditCard:
          $ref: '#/components/schemas/CreditCard'
        billingAddress:
          $ref: '#/components/schemas/Address'
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        creditLimit:
          type: number
        balance:
          type: number
        terms:
          type: integer
          format: int32
        yearsInBusiness:
          type: integer
          format: int32
        bankruptcy:
          type: boolean
        creditStatus:
          $ref: '#/components/schemas/CreditStatus'
        creditApprovedBy:
          type: string
          maxLength: 255
        creditVerification:
          $ref: '#/components/schemas/CreditVerification'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        viewStatement:
          type: string
          maxLength: 255
        podRequirement:
          $ref: '#/components/schemas/PodRequirement'
        creditApplication:
          $ref: '#/components/schemas/CreditApplication'
        references:
          type: array
          items:
            $ref: '#/components/schemas/CreditReference'
        checkedBy:
          type: string
          maxLength: 255
        payableCreditCard:
          type: boolean
        payableInvoice:
          type: boolean
    Currency:
      type: string
      enum:
        - CAD
        - USD
    PodRequirement:
      type: string
      enum:
        - ORI
        - POD
        - NOP
    PaymentType:
      type: string
      enum:
        - CHQ
        - EFT
        - CC
    CreditStatus:
      type: string
      enum:
        - APPD
        - PEND
        - REF
        - INACT
        - PROS
    CreditVerification:
      type: string
      enum:
        - TBC
        - API
    Branch:
      required: [ branchName, enterprise ]
      type: object
      properties:
        branchId:
          type: integer
          format: int64
        branchName:
          type: string
          maxLength: 100
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        billing:
          $ref: '#/components/schemas/Billing'
        taxInformation:
          $ref: '#/components/schemas/TaxInformation'
        referralCode:
          type: string
    Business:
      required: [ enterprise, isSameBilling ]
      type: object
      properties:
        businessId:
          type: integer
          format: int64
        headOffice:
          $ref: '#/components/schemas/Branch'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
        saleRep:
          $ref: '#/components/schemas/Enterprise'
        isSameBilling:
          type: boolean
    Commodity:
      required: [ isHazMat, docOnly, isFreezeProtect, isTempControl ]
      type: object
      properties:
        commodityId:
          type: integer
          format: int64
        commodityName:
          type: string
          maxLength: 255
        numberPieces:
          type: integer
          format: int32
        isStackable:
          type: boolean
        shipmentType:
          $ref: '#/components/schemas/ShipmentCategory'
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        packageCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/PackageCharacteristic'
        isFreezeProtect:
          type: boolean
        isTempControl:
          type: boolean
        tempUnit:
          $ref: '#/components/schemas/Temperature'
        tempMin:
          type: integer
          format: int32
        tempMax:
          type: integer
          format: int32
        docOnly:
          type: boolean
    PackageCharacteristic:
      type: object
      properties:
        packageCharacteristicId:
          type: integer
          format: int64
        numberPkg:
          type: integer
          format: int64
        description:
          type: string
        length:
          type: number
        width:
          type: number
        height:
          type: number
        weight:
          type: number
        hsCode:
          type: string
          pattern: '^[0-9]{0,10}'
        nmfc:
          type: string
          pattern: '^[0-9]{0,6}'
        freightClass:
          type: string
          pattern: '^[0-9]{0,3}'
        sub:
          type: string
          pattern: '^[0-9]{0,1}'
        hazMat:
          $ref: '#/components/schemas/HazMat'
        emergencyTel:
          type: string
          maxLength: 10
          pattern: '^[0-9]{10}$'
        emergencyContact:
          type: string
          maxLength: 50
        numberPieces:
          type: integer
          format: int32
        isHazMat:
          type: boolean
    ShipmentCategory:
      type: string
      enum:
        - PAL #Palette / SKD
        - CRT #Crate
        - FLL #Floor Loaded
        - BDL #Bundle
        - BLS #Bales
        - RLL #Rolls
        - CTN #Cartons
        - C20 #Container 20
        - C40 #Container 40
        - FTF #Full Truck Floor
        - FTP #Full Truck Palette
        - HLY #Hourly
        - FSV #Full Service (User Intervention Required)
        - LTR #Letter
        - PCK #Pack
        - PCL #Parcel
    Temperature:
      type: string
      enum:
        - F
        - C
    Communication:
      required: [ telephone ]
      type: object
      properties:
        commId:
          type: integer
          format: int64
        telephone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        extension:
          type: string
          maxLength: 7
          pattern: '^\d{0,7}$'
        cell:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        tollFree:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        fax:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        email:
          type: string
          maxLength: 255
        website:
          type: string
          maxLength: 255
    Contact:
      required: [ contact, contactComm ]
      type: object
      properties:
        contactId:
          type: integer
          format: int64
        contact:
          $ref: '#/components/schemas/Person'
        contactComm:
          $ref: '#/components/schemas/Communication'
        contactAdd:
          $ref: '#/components/schemas/Address'
        functionTitle:
          type: array
          items:
            $ref: '#/components/schemas/FunctionTitle'
        username:
          type: string
          maxLength: 255
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        isUser:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: string
      enum:
        - Cognito_customer_admin_role
        - Cognito_customer_superUserAuth_Role
        - Cognito_customer_readUnauth_Role
        - Cognito_customer_readAuth_Role
        - internal_accouting_user
        - internal_admin
        - internal_superUser
        - internal_support_user
        - internal_user
        - sysadmin
        - Cognito_vendor_superUserAuth_Role
        - Cognito_vendor_readUnauth_Role
        - Cognito_vendor_readAuth_Role
    FunctionTitle:
      type: string
      enum: [ OWNR, COOW, VP, CNTRLR, CRED, SALESREP, PSQUOTE, DISP, TRACK, PODRQ, OPSMNGR, SPVSR, MNGR, SAFE, OSDCLM, TERM, ACCPYBL, BLNG, CUSTSV, TRFC, LOGT, SHIP, REC, WHMNGR, WHSTF, OPER ]
    Notification:
      type: string
      enum:
        - ORDER_BOOKED
        - PICKED_UP
        - IN_TRANSIT
        - CUSTOMS_RELEASED
        - OUT_FOR_DELIVERY
        - DELIVERED
        - RECEIVE_INVOICE
        - RECEIVE_STATEMENT
        - SHIPMENT_TRACKING
        - BOOKING
        - AFTER_HOUR_TRACKING
        - BID
        - POD_REQUEST
        - INVOICE
        - STATEMENT
        - CLAIMS
    CreditApplication:
      required: [ enterprise, enterpriseType ]
      type: object
      properties:
        creditApplicationId:
          type: integer
          format: int64
        enterpriseType:
          $ref: '#/components/schemas/EnterpriseType'
        dateOfReq:
          type: string
          format: date
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        pres:
          $ref: '#/components/schemas/Person'
        vp:
          $ref: '#/components/schemas/Person'
        secretaryTreasurer:
          $ref: '#/components/schemas/Person'
        accountant:
          $ref: '#/components/schemas/Person'
        numOfEmployee:
          type: integer
          format: int32
        bankInfo:
          $ref: '#/components/schemas/BankAccount'
        references:
          type: array
          items:
            $ref: '#/components/schemas/CreditReference'
        monthlyExpenses:
          type: number
        requestedLimit:
          type: number
        gstNumber:
          type: string
          maxLength: 9
        pstNumber:
          type: string
          maxLength: 50
        usaTaxInfo:
          type: string
          pattern: '^\d{2}-\d{7}'
    CreditCard:
      required: [ cardholder, creditCardNumber, expDate, cvc ]
      type: object
      properties:
        ccId:
          type: integer
          format: int64
        cardholder:
          type: string
          maxLength: 100
        creditCardNumber:
          type: string
          maxLength: 16
          pattern: '^[0-9\*]{16}$'
        expDate:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
        cvc:
          type: string
          maxLength: 3
          pattern: '^[0-9\*]{3}$'
    CreditReference:
      required: [ ]
      type: object
      properties:
        creditReferenceId:
          type: integer
          format: int64
        companyName:
          type: string
        partnerNumYr:
          type: number
        person:
          $ref: '#/components/schemas/Person'
        communication:
          $ref: '#/components/schemas/Communication'
    CustomBroker:
      required: [ country, brokerName, accountNumber, primaryContact ]
      type: object
      properties:
        customBrokerId:
          type: integer
          format: int64
        country:
          type: string
          maxLength: 3
          pattern: '^[A-Z]{3}$'
        brokerName:
          type: string
        accountNumber:
          type: string
          pattern: '^\d{12}'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        alternateContact:
          $ref: '#/components/schemas/Contact'
    CustomerList:
      required: [ count, customers ]
      properties:
        count:
          type: integer
          format: int64
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    CustomerUpdate:
      type: object
      properties:
        section:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
    Customer:
      required: [ customerStatus, isBusiness ]
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        customerStatus:
          $ref: '#/components/schemas/BusinessStatus'
        isBusiness:
          type: boolean
        referralCode:
          type: string
        agreementDate:
          type: string
          format: date-time
        agreementSignature:
          type: string
        agreementSignatureName:
          type: string
        agreementValid:
          type: boolean
        gst:
          type: string
        qst:
          type: string
        hst:
          type: string
        irsNumber:
          type: string
        business:
          $ref: '#/components/schemas/Business'
        personal:
          $ref: '#/components/schemas/Personal'
        wholesalerName:
          type: string
        wholesalerId:
          type: integer
          format: int64
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        commodities:
          type: array
          items:
            $ref: '#/components/schemas/Commodity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        brokers:
          type: array
          items:
            $ref: '#/components/schemas/CustomBroker'
        rating:
          $ref: '#/components/schemas/Rating'
        lastUpdated:
          type: string
          format: date-time
        blockType:
          $ref: '#/components/schemas/BlockType'
        vendorBlockList:
          type: array
          items:
            $ref: '#/components/schemas/VendorDef'
    BusinessStatus:
      type: string
      enum:
        - ACTIVE
        - PROSPECT
        - INACTIVE
        - GUEST
        - ONBOARDING
        - PENDING
    Enterprise:
      required: [ legalName, address ]
      type: object
      properties:
        enterpriseId:
          type: integer
          format: int64
        legalName:
          type: string
          maxLength: 50
        commonName:
          type: string
          maxLength: 50
        businessPhone:
          type: string
          maxLength: 50
        remitName:
          type: string
          maxLength: 50
        owner:
          $ref: '#/components/schemas/Person'
        address:
          $ref: '#/components/schemas/Address'
        commInfo:
          $ref: '#/components/schemas/Communication'
        businessType:
          $ref: '#/components/schemas/BusinessType'
    BusinessType:
      type: string
      enum:
        - C_BUS
        - C_TC
        - C_FF
        - V_DIR_P
        - V_DIR_E
        - V_COM_P
        - V_COM_E
        - V_COM_I
        - V_DIR_LM
        - V_FF
    InsuranceDetails:
      required: [ currency, liabilityCoverage, cargoCoverage, provider, policyNumber, start, expiry, contact ]
      type: object
      properties:
        insuranceDetailsId:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        liabilityCoverage:
          type: number
        cargoCoverage:
          type: number
        provider:
          type: string
          maxLength: 50
        policyNumber:
          type: string
          maxLength: 20
        start:
          type: string
          format: date
        expiry:
          type: string
          format: date
        contact:
          $ref: '#/components/schemas/Contact'
    Location:
      required: [ locationType, companyName, availability, locAdd, locContact, flatbedTypes, flatbedTypes ]
      type: object
      properties:
        locationId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        locationType:
          $ref: '#/components/schemas/LocationType'
        companyName:
          type: string
        isPublicLocation:
          type: boolean
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        locComm:
          $ref: '#/components/schemas/Communication'
        locAdd:
          $ref: '#/components/schemas/Address'
        locContact:
          $ref: '#/components/schemas/Contact'
        insideClearance:
          $ref: '#/components/schemas/InsideClearance'
        isSameScheduleDaily:
          type: boolean
        isWeekEndClosed:
          type: boolean
        isClosedForLunchtime:
          type: boolean
        dailyScheduleOp:
          type: string
        dailyScheduleCl:
          type: string
        lunchtimeHourOp:
          type: string
        lunchtimeHourCl:
          type: string
        availability:
          $ref: '#/components/schemas/TimeTable'
        isApptRequired:
          type: boolean
        apptWindowBeg:
          type: string
        apptWindowEnd:
          type: string
        isDock:
          type: boolean
        isForkLiftAvail:
          type: boolean
        isPaletteJackAvail:
          type: boolean
        isLumperRequired:
          type: boolean
        isOnsiteSleepAvail:
          type: boolean
        sleepSectionDesc:
          type: string
        specialInstruction:
          type: string
        flatbedType:
          $ref: '#/components/schemas/FlatbedType'
        maxTruckSize:
          $ref: '#/components/schemas/TruckSize'
    LocationType:
      type: string
      enum:
        - BUS
        - RES_APP
        - RES_HOU
        - OTR_JS
        - OTR_CC
        - OTR_OB
        - OTR_HTL
        - OTR_SHL
      description: >
        Location type signification:
        * BUS: Business
        * RES_APT: Residential apartment
        * RES_HOU: Residential house
        * OTR_JS: Other - Jobsite
        * OTR_CC: Other - Convention Center
        * OTR_OB: Other - Office Building
        * OTR_HTL:  Other - Hotel
        * OTR_SHL:  Other - School
    TruckSize:
      type: string
      enum: [ DCAB, FT53, FT52, FT48, FT40, FT32, FT30, FT28, FT26, FT24, FT22, FT20, SPTR ]
    InsideClearance:
      type: string
      enum:
        - THOLD
        - ELEV
        - STRS
        - FRTELEV
      description: >
        InsideClearance Enum signification:
        * THOLD: Inside Threshold Clearance
        * ELEV: Inside Elevator Clearance
        * STRS: Inside Stairs Clearance 
        * FRTELEV: Inside Freight Elevator Clearance
    Margin:
      required: [ lowerBound, upperBound, price ]
      type: object
      properties:
        marginId:
          type: integer
          format: int64
        lowerBound:
          type: number
        upperBound:
          type: number
        minMargin:
          type: number
        price:
          type: number
    Person:
      required: [ firstName, lastName ]
      type: object
      properties:
        personId:
          type: integer
          format: int64
        firstName:
          type: string
          maxLength: 100
        initial:
          type: string
          maxLength: 5
        middleName:
          type: string
          maxLength: 100
        lastName:
          type: string
          maxLength: 100
    Personal:
      type: object
      properties:
        personalId:
          type: integer
          format: int64
        address:
          $ref: '#/components/schemas/Address'
        billing:
          $ref: '#/components/schemas/Billing'
    Rate:
      type: object
      properties:
        tariff:
          $ref: '#/components/schemas/Tariff'
        vendorsDef:
          type: array
          items:
            $ref: '#/components/schemas/VendorDef'
    Tariff:
      required: [ rateType, rateMeasure, price, vendors ]
      type: object
      properties:
        tariffId:
          type: integer
          format: int64
        rateType:
          $ref: '#/components/schemas/RateType'
        rateMeasure:
          type: string
          maxLength: 5
        price:
          type: number
    VendorDef:
      type: object
      properties:
        vendorId:
          type: integer
          format: int64
        vendorName:
          type: string
        bidOrderCenterId:
          type: integer
          format: int64
        bidOrderCenterName:
          type: string
    RateType:
      type: string
      enum:
        - FX
        - WT
        - SK
        - CWT
        - LINEAR_FT
        - FTL_RATES
    FixedRateUnit:
      type: string
      enum:
        - PAL
        - FTL
        - HRS
    WeightRateUnit:
      type: string
      enum:
        - LTL
        - W5C
        - W1K
        - W2K
        - W5K
        - W10K
        - W20K
        - W30K
    SkidRateUnit:
      type: string
      enum:
        - LF1
        - LF2
        - LF3
        - LF4
        - LF5
        - LF6
        - LF7
        - LF8
        - LF9
        - LF10
        - LF11
        - LF12
        - LF13
        - LF14
        - LF15
        - LF16
        - LF17
        - LF18
        - LF19
        - LF20
        - LF21
        - LF22
        - LF23
        - LF24
        - LF25
        - LF26
        - LF27
        - LF28
        - LF29
        - LF30
        - LF31
        - LF32
        - LF33
        - LF34
        - LF35
        - LF36
        - LF37
        - LF38
        - LF39
        - LF40
        - LF41
        - LF42
        - LF43
        - LF44
        - LF45
        - LF46
        - LF47
        - LF48
    RateSchedule:
      required: [ numberTransitDays, departureDays ]
      type: object
      properties:
        rateScheduleId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        numberTransitDays:
          type: integer
          format: int64
        departureDays:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        pickupWindow:
          type: integer
          format: int64
        origin:
          $ref: '#/components/schemas/Coordinate'
        destination:
          $ref: '#/components/schemas/Coordinate'
        originCity:
          $ref: '#/components/schemas/City'
        destinationCity:
          $ref: '#/components/schemas/City'
        rateScheduleCode:
          type: string
        vendorCode:
          type: string
        rateTypeCode:
          type: string
        rateType:
          $ref: '#/components/schemas/RateType'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/Tariff'
        minMargin:
          type: number
        maxWeightSkid:
          type: number
        minWeightSkid:
          type: number
        startDate:
          type: string
          format: date
        expDate:
          type: string
          format: date
        rateScheduleName:
          type: string
        originGP:
          $ref: '#/components/schemas/GroupingPoint'
        destinationGP:
          $ref: '#/components/schemas/GroupingPoint'
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        contactAssociate:
          $ref: '#/components/schemas/Contact'
        warehouseAssociate:
          $ref: '#/components/schemas/Location'
        fixedRates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
        weightRates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
        skidRates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
    VendorRateSchedule:
      required: [ vendorId, vendorCode, rateScheduleName, startDate , transportServices ]
      type: object
      properties:
        rateScheduleId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        vendorCode:
          type: string
        rateScheduleCode:
          type: string
        rateScheduleName:
          type: string
        startDate:
          type: string
          format: date
        expDate:
          type: string
          format: date
        rateTypeCode:
          type: string
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        contactAssociates:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        warehouseAssociates:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
    VendorRate:
      required: [ vendorRateScheduleId, rateName, rateType , departureDays, pickupWindow ]
      type: object
      properties:
        vendorRateId:
          type: integer
          format: int64
        vendorRateScheduleId:
          type: integer
          format: int64
        rateName:
          type: string
        rateCode:
          type: string
        rateType:
          $ref: '#/components/schemas/RateType'
        departureDays:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        pickupWindow:
          type: integer
          format: int64
        originCity:
          $ref: '#/components/schemas/City'
        originGP:
          $ref: '#/components/schemas/GroupingPoint'
        maxWeightSkid:
          type: number
        minWeightSkid:
          type: number
        itemsLinearFt:
          type: array
          items:
            $ref: '#/components/schemas/VendorRateItemsLinearFt'
        itemsCwt:
          type: array
          items:
            $ref: '#/components/schemas/VendorRateItemsCwt'
        itemsFtlRates:
          type: array
          items:
            $ref: '#/components/schemas/VendorRateItemsFtlRates'
    VendorRateItemsFtlRates:
      required: [ rateScheduleId, vendorId, numberTransitDays , price ]
      type: object
      properties:
        itemsId:
          type: integer
          format: int64
        rateScheduleId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        itemsCode:
          type: string
        destinationCity:
          $ref: '#/components/schemas/City'
        numberTransitDays:
          type: integer
          format: int64
        maximum:
          type: number
        minimum:
          type: number
        price:
          type: number
    VendorRateItemsCwt:
      required: [ rateScheduleId, vendorId, numberTransitDays ]
      type: object
      properties:
        itemsId:
          type: integer
          format: int64
        rateScheduleId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        itemsCode:
          type: string
        destinationCity:
          $ref: '#/components/schemas/City'
        numberTransitDays:
          type: integer
          format: int64
        maximum:
          type: number
        minimum:
          type: number
        ltl:
          type: number
        cwt500:
          type: number
        cwt1M:
          type: number
        cwt2M:
          type: number
        cwt5M:
          type: number
        cwt10M:
          type: number
        cwt20M:
          type: number
    VendorRateItemsLinearFt:
      required: [ rateScheduleId, vendorId, numberTransitDays ]
      type: object
      properties:
        itemsId:
          type: integer
          format: int64
        rateScheduleId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        itemsCode:
          type: string
        destinationCity:
          $ref: '#/components/schemas/City'
        numberTransitDays:
          type: integer
          format: int64
        maximum:
          type: number
        minimum:
          type: number
        l1ft:
          type: number
        l2ft:
          type: number
        l3ft:
          type: number
        l4ft:
          type: number
        l5ft:
          type: number
        l6ft:
          type: number
        l7ft:
          type: number
        l8ft:
          type: number
        l9ft:
          type: number
        l10ft:
          type: number
        l11ft:
          type: number
        l12ft:
          type: number
        l13ft:
          type: number
        l14ft:
          type: number
        l15ft:
          type: number
        l16ft:
          type: number
        l17ft:
          type: number
        l18ft:
          type: number
        l19ft:
          type: number
        l20ft:
          type: number
        l21ft:
          type: number
        l22ft:
          type: number
        l23ft:
          type: number
        l24ft:
          type: number
        l25ft:
          type: number
    GroupingPoint:
      required: [ parentId , gpName , gpCities , vendorCode ]
      type: object
      properties:
        gpId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        gpCode:
          type: string
        gpName:
          type: string
        vendorCode:
          type: string
        gpCities:
          type: array
          items:
            $ref: '#/components/schemas/City'
    City:
      required: [ country , provState , cityNameEn ]
      type: object
      properties:
        cityId:
          type: integer
          format: int64
        cityCode:
          type: string
        country:
          type: string
        countryCode:
          type: string
        provState:
          type: string
        provStateCode:
          type: string
        cityNameFr:
          type: string
        cityNameEn:
          type: string
    DayOfWeek:
      type: string
      enum: [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
    Rating:
      type: object
      properties:
        ratingId:
          type: integer
          format: int64
        dateExp:
          type: string
          format: date
        dateStart:
          type: string
          format: date
        margins:
          type: array
          items:
            $ref: '#/components/schemas/Margin'
        additionalFees:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/ZonesRateSchedules'
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/ZonesRateSchedules'
        cubingRules:
          $ref: '#/components/schemas/CubingRules'
        zonesCovered:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
    TimeTable:
      required: [ openLunch ]
      type: object
      properties:
        timeTableId:
          type: integer
          format: int64
        monOp:
          type: string
        monCl:
          type: string
        tuOp:
          type: string
        tuCl:
          type: string
        wedOp:
          type: string
        wedCl:
          type: string
        thOp:
          type: string
        thCl:
          type: string
        friOp:
          type: string
        friCl:
          type: string
        satOp:
          type: string
        satCl:
          type: string
        sunOp:
          type: string
        sunCl:
          type: string
        lunchOp:
          type: string
        lunchCl:
          type: string
        openLunch:
          type: boolean
    EnterpriseType:
      type: string
      enum:
        - COR
        - ASS
        - SPR
        - PAR
        - LLC
        - COO
    DeliveryService:
      type: object
      properties:
        deliveryServiceId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        coverageName:
          type: string
        startDate:
          type: string
          format: date
        expDate:
          type: string
          format: date
        zonesCovered:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        dedicatedTo:
          $ref: '#/components/schemas/Enterprise'
        rateSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RateSchedule'
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/ZonesRateSchedules'
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/ZonesRateSchedules'
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        coverageEnum:
          type: array
          items:
            $ref: '#/components/schemas/Coverage'
        contactAssociates:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        warehouseAssociates:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Zone:
      type: object
      properties:
        zoneId:
          type: integer
          format: int64
        pickups:
          type: boolean
        deliveries:
          type: boolean
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        location:
          $ref: '#/components/schemas/Location'
    DoorType:
      type: string
      enum: [ B, R ]
    Equipment:
      type: object
      properties:
        equipmentId:
          type: integer
          format: int64
        quantity:
          type: integer
        parentId:
          type: integer
          format: int64
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        flatbedType:
          $ref: '#/components/schemas/FlatbedType'
        isDayCab:
          type: boolean
        isSleeper:
          type: boolean
        isLiftgateLoad:
          type: boolean
        length:
          type: number
        width:
          type: number
        height:
          type: number
        cargoMassCapacity:
          type: number
        isDockLevel:
          type: boolean
        liftgateLoad:
          type: integer
        hazmatService:
          type: array
          items:
            $ref: '#/components/schemas/HazMat'
    EquipmentSize:
      type: string
      enum: [ FT53, FT48, FT40, FT30, FT28, FT26, FT24, FT22, FT20, SPTR ]
    EquipmentType:
      type: string
      enum: [ DRY_VAN,
              DRY_STRAIGHT_TRUCK,
              REEFER,
              REEFER_STRAIGHT_TRUCK,
              FLATBED_TRAILER,
              CHASSIS,
              SPRINTER ]
    HazMat:
      type: object
      properties:
        hazmatId:
          type: integer
          format: int64
        hazmatClass:
          type: string
        hazmatSubClass:
          type: string
        un:
          type: string
        packageGroup:
          type: string
    Liftgate:
      type: string
      enum: [ NONE, STND, PLFM, HDTY ]
    ProvincesStatesCovered:
      type: object
      properties:
        zoneServedId:
          type: integer
          format: int64
        inboundProvinceState:
          type: array
          items:
            $ref: '#/components/schemas/ProvinceState'
        outboundProvinceState:
          type: array
          items:
            $ref: '#/components/schemas/ProvinceState'
    ProvinceState:
      type: string
      enum: [ NL_CA, PE_CA, NS_CA, NB_CA, QC_CA, ON_CA, MB_CA, SK_CA, BC_CA, YT_CA, NT_CA, NU_CA, AL_USA, AK_USA,
              AZ_USA, AR_USA, CA_USA, CO_USA, CT_USA, DE_USA, FL_USA, GA_USA, HI_USA, ID_USA, IL_USA, IN_USA, IA_USA,
              KS_USA, KY_USA, LA_USA, ME_USA, MD_USA, MA_USA, MI_USA, MN_USA, MS_USA, MO_USA, MT_USA, NE_USA, NV_USA,
              NH_USA, NJ_USA, NM_USA, NY_USA, NC_USA, ND_USA, OH_USA, OK_USA, OR_USA, PA_USA, RI_USA, SC_USA, SD_USA,
              TN_USA, TX_USA, UT_USA, VT_USA, VA_USA, WA_USA, WV_USA, WI_USA, WY_USA ]
    TransportService:
      type: string
      enum: [ LTL, FTL, LTL_FL, FTL_FL, HS, FOOD_GRADE_LTL, FOOD_GRADE_FTL, FOOD_GRADE_LTL_FL, FOOD_GRADE_FTL_FL, FOOD_GRADE_HS ]
    VendorList:
      required: [ count, vendors ]
      properties:
        count:
          type: integer
          format: int64
        vendors:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
    VendorUpdate:
      type: object
      properties:
        section:
          type: string
        vendor:
          $ref: '#/components/schemas/Vendor'
    Vendor:
      required: [ vendorStatus, headOffice, contacts ]
      type: object
      properties:
        vendorId:
          type: integer
          format: int64
        vendorCode:
          type: string
        agreementDate:
          type: string
          format: date-time
        agreementSignature:
          type: string
        agreementSignatureName:
          type: string
        agreementValid:
          type: boolean
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        vendorStatus:
          $ref: '#/components/schemas/BusinessStatus'
        wholesalerId:
          type: integer
          format: int64
        headOffice:
          $ref: '#/components/schemas/VendorBranch'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        rateSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RateSchedule'
        coverageEnums:
          type: array
          items:
            $ref: '#/components/schemas/Coverage'
        transporterType:
          $ref: '#/components/schemas/TransporterType'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/VendorBranch'
        groupingPoints:
          type: array
          items:
            $ref: '#/components/schemas/GroupingPoint'
        flag1099Required:
          type: boolean
        federalIdNumber:
          type: string
        contractOnFile:
          type: boolean
        isSameReceivable:
          type: boolean
        isSameInsurance:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        authority:
          $ref: '#/components/schemas/Authority'
    Authority:
      required: [ mc, scac, usdot ]
      type: object
      properties:
        mc:
          type: string
          pattern: '^\d{1,10}$'
        scac:
          type: string
          maxLength: 4
          minLength: 4
        usdot:
          type: string
          pattern: '^[0-9]{1,12}$'
        cadBondNumber:
          type: string
        usBondNumber:
          type: string
        ctpat:
          type: string
          pattern: '^\d{10}$'
        fastApproved:
          type: boolean
        hazmatNumber:
          type: string
          pattern: '^\d{1,8}$'
        hazmatExpiry:
          type: string
          format: date
        hazmatTypeEnum:
          type: array
          items:
            $ref: '#/components/schemas/HazmatType'
        reviewRating:
          type: number
        wcbNumber:
          type: string
          maxLength: 10
        smc3TarriffCode:
          type: string
        hazmatFile:
          type: string
          format: byte
    TrackerInfos:
      required: [ isSatelliteTracker, isTrackerOnAllTruck ]
      type: object
      properties:
        isSatelliteTracker:
          type: boolean
        isTrackerOnAllTruck:
          type: boolean
        trackerProvider:
          type: string
    VendorBranch:
      required: [ branchName, enterprise ]
      type: object
      properties:
        vendorBranchId:
          type: integer
          format: int64
        branchName:
          type: string
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        cubingRules:
          $ref: '#/components/schemas/CubingRules'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        bidOrders:
          type: array
          items:
            $ref: '#/components/schemas/BidOrderCenter'
        insurance:
          $ref: '#/components/schemas/Insurance'
        receivable:
          $ref: '#/components/schemas/Receivable'
        administration:
          $ref: '#/components/schemas/Administration'
    Insurance:
      type: object
      properties:
        insuranceId:
          type: integer
          format: int64
        liability:
          $ref: '#/components/schemas/InsuranceInfo'
        cargo:
          $ref: '#/components/schemas/InsuranceInfo'
        insuranceBroker:
          $ref: '#/components/schemas/InsuranceBroker'
        file:
          type: string
          format: byte
    InsuranceInfo:
      type: object
      properties:
        insuranceInfoId:
          type: integer
          format: int64
        companyName:
          type: string
        start:
          type: string
          format: date
        expiry:
          type: string
          format: date
        policyNumber:
          type: string
        coverage:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
    InsuranceBroker:
      type: object
      properties:
        insuranceBrokerId:
          type: integer
          format: int64
        businessName:
          type: string
        contactFirstName:
          type: string
        contactLastName:
          type: string
        contactComm:
          $ref: '#/components/schemas/Communication'
    BidOrderCenter:
      type: object
      properties:
        bidOrderCenterId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        bidOrderCenterName:
          type: string
        wholesaler:
          type: string
        trackerInfos:
          $ref: '#/components/schemas/TrackerInfos'
        cubingRules:
          $ref: '#/components/schemas/CubingRules'
        bidOrderContacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        deliveryServices:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryService'
        dedicatedServices:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryService'
    CubingRules:
      type: object
      properties:
        cubingRulesId:
          type: integer
          format: int64
        thresholdHeight:
          type: number
        thresholdLength:
          type: number
        thresholdWidth:
          type: number
        ceilingCube:
          type: number
        wallCube:
          type: number
        skidLength:
          type: number
        skidWidth:
          type: number
        skidHeight:
          type: number
    Receivable:
      required: [ receivableStatus, currency, paymentType, isQuickPayProgram, termOfPayment, tradeReference ]
      type: object
      properties:
        receivableId:
          type: integer
          format: int64
        accountNumber:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        termOfPayment:
          type: integer
          format: int32
        isQuickPayProgram:
          type: boolean
        factoringCoName:
          type: string
        careOf:
          type: string
        mailingAddress:
          $ref: '#/components/schemas/Address'
        bankingInfo:
          $ref: '#/components/schemas/BankAccount'
        tradeReference:
          $ref: '#/components/schemas/CreditApplication'
        receivableApprovedBy:
          type: string
          maxLength: 255
        receivableStatus:
          $ref: '#/components/schemas/CreditStatus'
    Coordinate:
      #  required: [ coordinateName, longitude, latitude, radius ]
      type: object
      properties:
        coordinateId:
          type: integer
          format: int64
        coordinateName:
          type: string
          maxLength: 85
        location:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        radius:
          type: number
        radiusUnit:
          $ref: '#/components/schemas/RadiusUnit'
        directions:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
        timeZoneId:
          type: string
    BlockType:
      type: string
      enum:
        - BLACK
        - WHITE
    Direction:
      type: string
      enum: [ ORG, DST ]
    RadiusUnit:
      type: string
      enum: [ KM, MI ]
    ZonesRateSchedules:
      type: object
      properties:
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        rateSchedule:
          type: array
          items:
            $ref: '#/components/schemas/RateSchedule'
    ReviewsRating:
      type: string
      enum:
        - UNRATED
        - PREFERRED
        - EXCELLENT
        - GOOD
        - POOR
        - NOT_RECOMMENDED
        - DO_NOT_USE
        - BLANK
        - PROBATIONNARY
    Week:
      type: object
      properties:
        weekId:
          type: integer
          format: int64
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
    TransporterType:
      type: string
      enum: [ STD, DIR, EXP ]
    DocumentStatus:
      type: string
      enum: [ INITIATE, SEND, ARCHIVED, ACCEPTED, DELETE ]
    DocumentType:
      type: string
      enum: [ VENDOR, CUSTOMER, BID_ORDER, INSURANCE ,POD, NOTE ]
    Document:
      required: [ businessId, parentId, filename, fileUrl, fileSize, documentStatus, documentType,subject,description ]
      type: object
      properties:
        id:
          type: integer
          format: int64
        businessId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        fileName:
          type: string
          maxLength: 100
        subject:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        mediaType:
          type: string
          maxLength: 100
        fileKeys:
          type: string
          maxLength: 100
        temporalFileUrl:
          type: string
          maxLength: 100
        filePath:
          type: string
          maxLength: 255
        fileSize:
          type: integer
          format: int64
        createTimestamp:
          type: string
          format: date
        updateTimestamp:
          type: string
          format: date
        deleteTimestamp:
          type: string
          format: date
        documentStatus:
          $ref: '#/components/schemas/DocumentStatus'
        documentType:
          $ref: '#/components/schemas/DocumentType'
    FlatbedType:
      type: string
      enum: [
        _53_FT_SLEEPER,
        _53_FT_DAYCAD,
        _48_FT_SLEEPER,
        _48_FT_DAYCAD,
        _40_FT_SLEEPER,
        _40_FT_DAYCAD,
        _30_FT,
        _28_FT,
        _26_FT,
        _24_FT,
        _22_FT,
        _20_FT,
        _53_FT,
        _40_FT,
        _53_FT_FLATBED,
        _48_FT_FLATBED,
        _53_FT_STEP_DECK,
        _48_FT_STEP_DECK,
        _53_FT_RACK_TARQ,
        _53_FT_CONESTOGA_ROLL_TITE,
        _53_FT_DOUBLE_DROP,
        _53_FT_LOWBOY,
        _53_FT_RGN,
        _53_FT_FLOAT ]
    HazmatType:
      type: string
      enum: [ C1_EXP, C2_GAS, C3_FCL, C4_FS_SC_DWW, C5_OOP, C6_PPIH, C7_RAD, C8_COR, C9_MIS ]
    Coverage:
      type: string
      enum: [ DOM_CA, DOM_US, CB, MEX ]
    Administration:
      type: object
      properties:
        administrationId:
          type: integer
          format: int64
        references:
          type: array
          items:
            $ref: '#/components/schemas/CreditReference'
        accountNumber:
          type: string
        accountsReceivable:
          $ref: '#/components/schemas/AccountsReceivable'
        bankingInfo:
          $ref: '#/components/schemas/BankAccount'
    AccountsReceivable:
      type: object
      properties:
        accountsReceivableId:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        isQuickPayProgram:
          type: boolean
        termOfPayment:
          type: integer
          format: int32
        gstNumber:
          type: string
          maxLength: 9
        pstNumber:
          type: string
          maxLength: 50
        hstNumber:
          type: string
          maxLength: 50
        irsNumber:
          type: string
          maxLength: 50
        factoringCompany:
          $ref: '#/components/schemas/FactoringCompany'
        address:
          $ref: '#/components/schemas/Address'
    FactoringCompany:
      type: object
      properties:
        factoringCompanyId:
          type: integer
          format: int64
        factoringCoName:
          type: string
        careOf:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        person:
          $ref: '#/components/schemas/Person'
        communication:
          $ref: '#/components/schemas/Communication'
        noticeOfAssignment:
          type: string
          format: byte
    TaxInformation:
      type: object
      properties:
        taxInformationId:
          type: integer
          format: int64
        gst:
          type: string
        qst:
          type: string
        hst:
          type: string
        irsNumber:
          type: string