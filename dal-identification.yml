openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: http://localhost:8080
    description: Generated server url
#TODO add vendors and other missing endpoints
paths:
  /api/v1/autotransport/identification/customers/count:
    get:
      tags:
        - customer-controller
      operationId: getCustomersCount
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
  /api/v1/autotransport/identification/customers?page=[page]&size=[size]:
    get:
      tags:
        - customer-controller
      operationId: getCustomers
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      tags:
        - customer-controller
      operationId: saveCustomer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/autotransport/identification/customers/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/v1/autotransport/identification/bidordercenters:
    get:
      tags:
        - bidOrderCenter-controller
      operationId: getBidOrderCenters
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BidOrderCenter'
  /api/v1/autotransport/identification/bidordercenters/{id}:
    get:
      tags:
        - bidOrderCenter-controller
      operationId: getBidOrderCenter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidOrderCenter'
    put:
      tags:
        - bidOrderCenter-controller
      operationId: putBidOrderCenter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BidOrderCenter'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidOrderCenter'
  /api/v1/autotransport/identification/rateschedule:
    get:
      tags:
        - rateSchedule-controller
      operationId: getRateSchedules
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RateSchedule'
  /api/v1/autotransport/identification/rateschedule/{customerId}:
    get:
      tags:
        - rateSchedule-controller
      operationId: getRateSchedule
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateSchedule'
  /api/v1/autotransport/identification/vendors/count:
    get:
      tags:
        - vendor-controller
      operationId: getVendorsCount
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /api/v1/autotransport/identification/vendors?page=[page]&size=[size]:
    get:
      tags:
        - vendor-controller
      operationId: getVendors
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
    put:
      tags:
        - vendor-controller
      operationId: saveVendor
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Vendor'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
    post:
      tags:
        - vendor-controller
      operationId: createVendor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
  /api/v1/autotransport/identification/vendors/{id}:
    get:
      tags:
        - vendor-controller
      operationId: getVendor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
  /api/v1/autotransport/identification/receivables:
    get:
      tags:
        - receivable-controller
      operationId: getReceivables
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Receivable'
    put:
      tags:
        - receivable-controller
      operationId: saveReceivable
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Receivable'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Receivable'
    post:
      tags:
        - receivable-controller
      operationId: createReceivable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Receivable'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receivable'
  /api/v1/autotransport/identification/receivables/{id}:
    get:
      tags:
        - receivable-controller
      operationId: getReceivable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receivable'
  /api/v1/autotransport/identification/personals:
    get:
      tags:
        - personal-controller
      operationId: getPersonals
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personal'
    put:
      tags:
        - personal-controller
      operationId: savePersonal
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Personal'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personal'
    post:
      tags:
        - personal-controller
      operationId: createPersonal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Personal'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personal'
  /api/v1/autotransport/identification/personals/{id}:
    get:
      tags:
        - personal-controller
      operationId: getPersonal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personal'
  /api/v1/autotransport/identification/equipments:
    get:
      tags:
        - equipment-controller
      operationId: getEquipments
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
    put:
      tags:
        - equipment-controller
      operationId: saveEquipment
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Equipment'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
    post:
      tags:
        - equipment-controller
      operationId: createEquipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
  /api/v1/autotransport/identification/equipments/{id}:
    get:
      tags:
        - equipment-controller
      operationId: getEquipment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
  /api/v1/autotransport/identification/customBrokers:
    put:
      tags:
        - customBroker-controller
      operationId: saveCustomBroker
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomBroker'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomBroker'
  /api/v1/autotransport/identification/customBrokers/{id}:
    get:
      tags:
        - customBroker-controller
      operationId: getCustomBroker
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomBroker'
  /api/v1/autotransport/identification/accessorycharges:
    get:
      tags:
        - accessoryCharge-controller
      operationId: getAccessoryCharges
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessoryCharge'
    put:
      tags:
        - accessoryCharge-controller
      operationId: saveAccessoryCharge
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccessoryCharge'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessoryCharge'
  /api/v1/autotransport/identification/accessorycharges/{id}:
    get:
      tags:
        - accessoryCharge-controller
      operationId: getAccessoryCharge
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessoryCharge'
  /api/v1/autotransport/identification/addresses:
    put:
      tags:
        - address-controller
      operationId: saveAddress
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Address'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
  /api/v1/autotransport/identification/addresses/{id}:
    get:
      tags:
        - address-controller
      operationId: getAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
  /api/v1/autotransport/identification/contacts:
    get:
      tags:
        - contact-controller
      operationId: getContacts
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    put:
      tags:
        - contact-controller
      operationId: saveContact
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      tags:
        - contact-controller
      operationId: createContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
  /api/v1/autotransport/identification/contacts/{id}:
    get:
      tags:
        - contact-controller
      operationId: getContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
  /api/v1/autotransport/identification/coordinates:
    get:
      tags:
        - coordinate-controller
      operationId: getCoordinates
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
    put:
      tags:
        - coordinate-controller
      operationId: saveCoordinate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Coordinate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinate'
    post:
      tags:
        - coordinate-controller
      operationId: createCoordinate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordinate'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
  /api/v1/autotransport/identification/coordinates/{id}:
    get:
      tags:
        - coordinate-controller
      operationId: getCoordinate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coordinate'
  /api/v1/autotransport/identification/businesses:
    get:
      tags:
        - business-controller
      operationId: getBusinesses
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
    put:
      tags:
        - business-controller
      operationId: saveBusiness
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Business'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
    post:
      tags:
        - business-controller
      operationId: createBusiness
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
  /api/v1/autotransport/identification/businesses/{id}:
    get:
      tags:
        - business-controller
      operationId: getBusiness
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
  /api/v1/autotransport/identification/vendorbranchs:
    put:
      tags:
        - vendorBranch-controller
      operationId: saveVendorBranch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VendorBranch'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorBranch'
    post:
      tags:
        - vendorBranch-controller
      operationId: createVendorBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorBranch'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorBranch'
  /api/v1/autotransport/identification/vendorbranchs/{id}:
    get:
      tags:
        - vendorBranch-controller
      operationId: getVendorBranch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorBranch'

components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        url:
          type: string
    AccessoryCharge:
      type: object
      properties:
        accessoryChargeId:
          type: integer
          format: int64
        chargeName:
          $ref: '#/components/schemas/ChargeType'
        chargeMethod:
          $ref: '#/components/schemas/ChargeUnit'
        freeUpTo:
          type: number
        price:
          type: number
        maxPrice:
          type: number
    BlockType:
      type: string
      enum:
        - BLACK
        - WHITE
    ChargeUnit:
      type: string
      enum:
        - CWT
        - PU
        - TIME
        - FIX
        - PFR
        - SQ
    ChargeType:
      type: string
      enum:
        - APP
        - LFT
        - INSD
        - DRS
        - WGV
        - ACC
        - RES
        - JOB
        - TRDS
        - INSE
        - INSS
        - APPF
        - LFTF
        - INSF
        - RESD
        - FLS
        - WTIM
        - MP
        - MD
        - AHP
        - AHD
        - TONU
        - HZMT
        - TMPC
        - ISW
        - BISP
        - STRG
    Address:
      required: [ add, city, postalZipCode, provinceState, country ]
      type: object
      properties:
        addId:
          type: integer
          format: int64
        add:
          type: string
        add2:
          type: string
        city:
          type: string
        postalZipCode:
          type: string
        provinceState:
          type: string
        country:
          type: string
    BankAccount:
      required: [ branchName, institution, transit, account, address, comm, contact ]
      type: object
      properties:
        bankAccountId:
          type: integer
          format: int64
        branchName:
          type: string
        institution:
          type: string
          maxLength: 9
        transit:
          type: string
          maxLength: 9
        account:
          type: string
          maxLength: 17
        address:
          $ref: '#/components/schemas/Address'
        comm:
          $ref: '#/components/schemas/Communication'
        contact:
          $ref: '#/components/schemas/Person'
    Billing:
      required: [ currencyType, podRequirement, paymentType, isSameBillAdd, payableCreditCard ]
      type: object
      properties:
        billingId:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        isSameBillAdd:
          type: boolean
        payableCreditCard:
          type: boolean
        creditCard:
          $ref: '#/components/schemas/CreditCard'
        billingAddress:
          $ref: '#/components/schemas/Address'
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        creditLimit:
          type: number
        balance:
          type: number
        terms:
          type: integer
          format: int32
        creditStatus:
          $ref: '#/components/schemas/CreditStatus'
        creditApprovedBy:
          type: string
          maxLength: 255
        creditVerification:
          $ref: '#/components/schemas/CreditVerification'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        viewStatement:
          type: string
          maxLength: 255
        podRequirement:
          $ref: '#/components/schemas/PodRequirement'
        creditApplication:
          $ref: '#/components/schemas/CreditApplication'
        checkedBy:
          type: string
          maxLength: 255
        payableInvoice:
          type: boolean
    Currency:
      type: string
      enum:
        - CAD
        - USD
    PodRequirement:
      type: string
      enum:
        - ORI
        - POD
        - NOP
    PaymentType:
      type: string
      enum:
        - CHQ
        - EFT
        - CC
    CreditStatus:
      type: string
      enum:
        - APPD
        - PEND
        - REF
        - INACT
        - PROS
    CreditVerification:
      type: string
      enum:
        - TBC
        - API
    Branch:
      required: [ branchName, enterprise ]
      type: object
      properties:
        branchId:
          type: integer
          format: int64
        branchName:
          type: string
          maxLength: 100
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        billing:
          $ref: '#/components/schemas/Billing'
    Business:
      required: [ enterprise, isSameBilling ]
      type: object
      properties:
        businessId:
          type: integer
          format: int64
        headOffice:
          $ref: '#/components/schemas/Branch'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
        saleRep:
          $ref: '#/components/schemas/Enterprise'
        isSameBilling:
          type: boolean
    Commodity:
      type: object
      properties:
        commodityId:
          type: integer
          format: int64
        commodityName:
          type: string
          maxLength: 255
        numberPieces:
          type: integer
          format: int32
        isStackable:
          type: boolean
        shipmentType:
          $ref: '#/components/schemas/ShipmentCategory'
        packageCaracteristic:
          type: array
          items:
            $ref: '#/components/schemas/PackageCaracteristic'
        isFreezeProtect:
          type: boolean
        isTempControl:
          type: boolean
        tempUnit:
          $ref: '#/components/schemas/Temperature'
        tempMin:
          type: integer
          format: int32
        tempMax:
          type: integer
          format: int32
        docOnly:
          type: boolean
    PackageCaracteristic:
      type: object
      properties:
        packageCaracteristicId:
          type: integer
          format: int64
        numberPkg:
          type: integer
        description:
          type: string
        length:
          type: number
        width:
          type: number
        height:
          type: number
        weight:
          type: number
        hsCode:
          type: string
          pattern: '^[0-9]{0,10}'
        nmfc:
          type: string
          pattern: '^[0-9]{0,6}'
        freightClass:
          type: string
          pattern: '^[0-9]{0,3}'
        sub:
          type: string
          pattern: '^[0-9]{0,1}'
        hazMat:
          $ref: '#/components/schemas/HazMat'
        emergencyTel:
          type: string
          maxLength: 10
          pattern: '^[0-9]{10}$'
        emergencyContact:
          type: string
          maxLength: 50
        numberPieces:
          type: integer
          format: int32
        isHazMat:
          type: boolean
    ShipmentCategory:
      type: string
      enum:
        - LTR #letter
        - PCK #pack
        - PCL #parcel
        - SKD #Palet / skid
        - CRT #Crate
        - BDL #Bundle
        - RLL #Roll
        - FLL #Floor loaded
        - FSD #Full truck palet
        - FFL #Full truck floor
    Temperature:
      type: string
      enum:
        - F
        - C
    Communication:
      required: [ telephone ]
      type: object
      properties:
        commId:
          type: integer
          format: int64
        telephone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        extension:
          type: string
          maxLength: 7
          pattern: '^\d{0,7}$'
        cell:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        tollFree:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        fax:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        email:
          type: string
          maxLength: 255
        website:
          type: string
          maxLength: 255
    Contact:
      required: [ contact, contactComm ]
      type: object
      properties:
        contactId:
          type: integer
          format: int64
        contact:
          $ref: '#/components/schemas/Person'
        contactComm:
          $ref: '#/components/schemas/Communication'
        contactAdd:
          $ref: '#/components/schemas/Address'
        functionTitle:
          type: array
          items:
            $ref: '#/components/schemas/FunctionTitle'
        username:
          type: string
          maxLength: 255
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        isUser:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: string
      enum:
        - Cognito_customer_admin_role
        - Cognito_customer_superUserAuth_Role
        - Cognito_customer_readUnauth_Role
        - Cognito_customer_readAuth_Role
        - internal_accouting_user
        - internal_admin
        - internal_superUser
        - internal_support_user
        - internal_user
        - sysadmin
        - Cognito_vendor_superUserAuth_Role
        - Cognito_vendor_readUnauth_Role
        - Cognito_vendor_readAuth_Role
    FunctionTitle:
      type: string
      enum: [ OWNR, COOW, ACNT, SECR, SAFE, SECU, OPER, CENT, TERM ]
    Notification:
      type: string
      enum:
        - ORDER_BOOKED
        - PICKED_UP
        - IN_TRANSIT
        - CUSTOMS_RELEASED
        - OUT_FOR_DELIVERY
        - DELIVRED
        - RECEIVE_INVOICE
        - RECEIVE_STATEMENT
        - SHIPMENT_TRACKING
        - BOOKING
        - AFTER_HOUR_TRACKING
        - BID
        - POD_REQUEST
        - INVOICE
        - STATEMENT
        - OSD
        - CLAIMS
    CreditApplication:
      required: [ enterprise, enterpriseType ]
      type: object
      properties:
        creditApplicationId:
          type: integer
          format: int64
        enterpriseType:
          $ref: '#/components/schemas/EnterpriseType'
        dateOfReq:
          type: string
          format: date
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        pres:
          $ref: '#/components/schemas/Person'
        vp:
          $ref: '#/components/schemas/Person'
        secretaryTreasurer:
          $ref: '#/components/schemas/Person'
        accountant:
          $ref: '#/components/schemas/Person'
        numOfEmployee:
          type: integer
          format: int32
        bankInfo:
          $ref: '#/components/schemas/BankAccount'
        references:
          type: array
          items:
            $ref: '#/components/schemas/CreditReference'
        monthlyExpenses:
          type: number
        requestedLimit:
          type: number
        gstNumber:
          type: string
          maxLength: 9
        pstNumber:
          type: string
          maxLength: 50
        usaTaxInfo:
          type: integer
          format: int64
          maximum: 999999999
    CreditCard:
      required: [ cardholder, creditCardNumber, expDate, cvc ]
      type: object
      properties:
        ccId:
          type: integer
          format: int64
        cardholder:
          type: string
          maxLength: 100
        creditCardNumber:
          type: string
          maxLength: 16
          pattern: '^\d{16}$'
        expDate:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
        cvc:
          type: string
          maxLength: 3
          pattern: '^\d{3}$'
    CreditReference:
      required: [ supplierName, contactName, address, telephone, email ]
      type: object
      properties:
        creditReferenceId:
          type: integer
          format: int64
        supplierName:
          type: string
        contactName:
          type: string
          maxLength: 100
        address:
          type: string
          maxLength: 255
        telephone:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        fax:
          type: string
          maxLength: 10
          pattern: '^\d{10}$'
        email:
          type: string
          maxLength: 255
        partnerNumYr:
          type: number
    CustomBroker:
      required: [ country, brokerName, accountNumber, primaryContact ]
      type: object
      properties:
        customBrokerId:
          type: integer
          format: int64
        country:
          type: string
          maxLength: 3
          pattern: '^[A-Z]{3}$'
        brokerName:
          type: string
        accountNumber:
          type: integer
          format: int64
          maximum: 999999999999
        primaryContact:
          $ref: '#/components/schemas/Contact'
        alternateContact:
          $ref: '#/components/schemas/Contact'
    Customer:
      required: [ customerStatus, isBusiness ]
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        blockType:
          $ref: '#/components/schemas/BlockType'
        vendorBlockList:
          type: array
          items:
            type: integer
            format: int64
        customerStatus:
          $ref: '#/components/schemas/BusinessStatus'
        business:
          $ref: '#/components/schemas/Business'
        personal:
          $ref: '#/components/schemas/Personal'
        thirdParty:
          $ref: '#/components/schemas/Enterprise'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        commodities:
          type: array
          items:
            $ref: '#/components/schemas/Commodity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        brokers:
          type: array
          items:
            $ref: '#/components/schemas/CustomBroker'
        rating:
          $ref: '#/components/schemas/Rating'
        lastUpdated:
          type: string
          format: date-time
    BusinessStatus:
      type: string
      enum:
        - ACTIVE
        - PROSPECT
        - INACTIVE
        - GUEST
        - ONBOARDING
        - PENDING
    Enterprise:
      required: [ legalName, commInfo, address, businessType ]
      type: object
      properties:
        enterpriseId:
          type: integer
          format: int64
        legalName:
          type: string
          maxLength: 50
        commonName:
          type: string
          maxLength: 50
        remitName:
          type: string
          maxLength: 50
        owner:
          $ref: '#/components/schemas/Person'
        address:
          $ref: '#/components/schemas/Address'
        commInfo:
          $ref: '#/components/schemas/Communication'
        businessType:
          $ref: '#/components/schemas/BusinessType'
    BusinessType:
      type: string
      enum:
        - C_SHC
        - C_WLS
        - C_RTL
        - C_TRS
        - C_OTH
        - V_CAR
        - V_MCO
        - V_LPR
        - V_WHS
        - V_FFD
        - V_INM
    InsuranceDetails:
      required: [ currency, liabilityCoverage, cargoCoverage, provider, policyNumber, start, expiry, contact ]
      type: object
      properties:
        id:
          type: integer
          format: int64
        currency:
          $ref: '#/components/schemas/Currency'
        liabilityCoverage:
          type: number
        cargoCoverage:
          type: number
        provider:
          type: string
          maxLength: 50
        policyNumber:
          type: string
          maxLength: 20
        start:
          type: string
          format: date
        expiry:
          type: string
          format: date
        contact:
          $ref: '#/components/schemas/Contact'
    Location:
      required: [ locationType, isPublicLocation, isApptRequired, isLumperRequired, coordinate, locComm, locAdd, locContact,
                  availability, is53Ft, isForkLiftAvail, isPaletteJackAvail, isOnsiteSleepAvail, isAddLaborRequired,
                  apptNumber, isDock, isTailgate, isCurbside, isInside, isDriverAssist ]
      type: object
      properties:
        locationId:
          type: integer
          format: int64
        locationType:
          $ref: '#/components/schemas/LocationType'
        isPublicLocation:
          type: boolean
        isApptRequired:
          type: boolean
        apptWindowBeg:
          type: Time
        apptWindowEnd:
          type: Time
        apptNumber:
          type: boolean
        isLumperRequired:
          type: boolean
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        locComm:
          $ref: '#/components/schemas/Communication'
        locAdd:
          $ref: '#/components/schemas/Address'
        locContact:
          $ref: '#/components/schemas/Contact'
        availability:
          $ref: '#/components/schemas/TimeTable'
        maxTruckSize:
          $ref: '#/components/schemas/TruckSize'
        isDock:
          type: boolean
        isTailgate:
          type: boolean
        isCurbside:
          type: boolean
        is53Ft:
          type: boolean
        isAddLaborRequired:
          type: boolean
        isInside:
          type: boolean
        insideClearance:
          $ref: '#/components/schemas/InsideClearance'
        clearLength:
          type: number
        clearWidth:
          type: number
        clearHeight:
          type: number
        isDriverAssist:
          type: boolean
        isForkLiftAvail:
          type: boolean
        isPaletteJackAvail:
          type: boolean
        isOnsiteSleepAvail:
          type: boolean
        sleepSectionDesc:
          type: string
    LocationType:
      type: string
      enum:
        - BUS
        - RES_APP
        - RES_HOU
        - OTR_JS
        - OTR_CC
        - OTR_OB
        - OTR_HTL
        - OTR_SHL
      description: >
        Location type signification:
        * BUS: Business
        * RES_APT: Residential apartment
        * RES_HOU: Residential house
        * OTR_JS: Other - Jobsite
        * OTR_CC: Other - Convention Center
        * OTR_OB: Other - Office Building
        * OTR_HTL:  Other - Hotel
        * OTR_SHL:  Other - School
    TruckSize:
      type: string
      enum: [ DCAB, FT53, FT52, FT48, FT40, FT32, FT30, FT28, FT26, FT24, FT22, FT20, SPTR ]
    InsideClearance:
      type: string
      enum:
        - THOLD
        - ELEV
        - STRS
        - FRTELEV
      description: >
        InsideClearance Enum signification:
        * THOLD: Inside Threshold Clearance
        * ELEV: Inside Elevator Clearance
        * STRS: Inside Stairs Clearance 
        * FRTELEV: Inside Freight Elevator Clearance
    Margin:
      required: [ lowerBound, upperBound, price, minMargin ]
      type: object
      properties:
        marginId:
          type: integer
          format: int64
        lowerBound:
          type: number
        upperBound:
          type: number
        minMargin:
          type: number
        price:
          type: number
    Person:
      required: [ firstName, lastName ]
      type: object
      properties:
        personId:
          type: integer
          format: int64
        firstName:
          type: string
          maxLength: 100
        initial:
          type: string
          maxLength: 5
        middleName:
          type: string
          maxLength: 100
        lastName:
          type: string
          maxLength: 100
    Personal:
      type: object
      properties:
        personalId:
          type: integer
          format: int64
        billing:
          $ref: '#/components/schemas/Billing'
    Rate:
      type: object
      properties:
        tariff:
          $ref: '#/components/schemas/Tariff'
        vendorsDef:
          type: array
          items:
            $ref: '#/components/schemas/VendorDef'
    Tariff:
      required: [ rateType, rateMeasure, price, vendors ]
      type: object
      properties:
        tariffId:
          type: integer
          format: int64
        rateType:
          $ref: '#/components/schemas/RateType'
        rateMeasure:
          type: string
          maxLength: 5
        price:
          type: number
        minMargin:
          type: number
    VendorDef:
      type: object
      properties:
        vendorId:
          type: integer
          format: int64
        bidOrderCenterId:
          type: integer
          format: int64
    RateType:
      type: string
      enum:
        - FX
        - WT
        - SK
    RateSchedule:
      required: [ origin, destination ]
      type: object
      properties:
        rateScheduleId:
          type: integer
          format: int64
        origin:
          $ref: '#/components/schemas/Coordinate'
        destination:
          $ref: '#/components/schemas/Coordinate'
        rateType:
          $ref: '#/components/schemas/RateType'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
        minMargin:
          type: number
    Rating:
      type: object
      properties:
        ratingId:
          type: integer
          format: int64
        dateExp:
          type: string
          format: date
        dateStart:
          type: string
          format: date
        margins:
          type: array
          items:
            $ref: '#/components/schemas/Margin'
        additionalFees:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        rateSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RateSchedule'
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
    TimeTable:
      type: object
      properties:
        timeTableId:
          type: integer
          format: int64
        monOp:
          type: Time
        monCl:
          type: Time
        tuOp:
          type: Time
        tuCl:
          type: Time
        wedOp:
          type: Time
        wedCl:
          type: Time
        thOp:
          type: Time
        thCl:
          type: Time
        friOp:
          type: Time
        friCl:
          type: Time
        satOp:
          type: Time
        satCl:
          type: Time
        sunOp:
          type: Time
        sunCl:
          type: Time
        lunchOp:
          type: Time
        lunchCl:
          type: Time
        openLunch:
          type: boolean
    EnterpriseType:
      type: string
      enum:
        - COR
        - ASS
        - OTH
    DeliveryService:
      type: object
      properties:
        deliveryServiceId:
          type: integer
          format: int64
        coverageName:
          type: string
        startDate:
          type: string
          format: date
        expDate:
          type: string
          format: date
        zonesCovered:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        dedicatedTo:
          $ref: '#/components/schemas/Enterprise'
        rateSchedules:
          type: array
          items:
            $ref: '#/components/schemas/RateSchedule'
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
    DoorType:
      type: string
      enum: [ B, R ]
    Equipment:
      type: object
      properties:
        equipmentId:
          type: integer
          format: int64
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        isDcab:
          type: boolean
        boxType:
          $ref: '#/components/schemas/BoxType'
        length:
          type: number
        width:
          type: number
        clearance:
          type: number
        cargoMassCapacity:
          type: number
        isLogistic:
          type: boolean
        isDockLevel:
          type: boolean
        doorType:
          $ref: '#/components/schemas/DoorType'
        liftgateType:
          $ref: '#/components/schemas/Liftgate'
        isReefer:
          type: boolean
        hazmatService:
          type: array
          items:
            $ref: '#/components/schemas/HazMat'
    EquipmentSize:
      type: string
      enum: [ FT53, FT48, FT40, FT30, FT28, FT26, FT24, FT22, FT20, SPTR ]
    EquipmentType:
      type: string
      enum: [ CBOX, FBED ]
    HazMat:
      type: object
      properties:
        hazmatId:
          type: integer
          format: int64
        hazmatClass:
          type: string
        hazmatSubClass:
          type: string
        un:
          type: string
        packageGroup:
          type: string
    Liftgate:
      type: string
      enum: [ NONE, STND, PLFM, HDTY ]
    ProvincesStatesCovered:
      type: object
      properties:
        zoneServedId:
          type: integer
          format: int64
        inboundProvinceState:
          type: array
          items:
            $ref: '#/components/schemas/ProvinceState'
        outboundProvinceState:
          type: array
          items:
            $ref: '#/components/schemas/ProvinceState'
    ProvinceState:
      type: string
      enum: [ NL_CA, PE_CA, NS_CA, NB_CA, QC_CA, ON_CA, MB_CA, SK_CA, BC_CA, YT_CA, NT_CA, NU_CA, AL_USA, AK_USA,
              AZ_USA, AR_USA, CA_USA, CO_USA, CT_USA, DE_USA, FL_USA, GA_USA, HI_USA, ID_USA, IL_USA, IN_USA, IA_USA,
              KS_USA, KY_USA, LA_USA, ME_USA, MD_USA, MA_USA, MI_USA, MN_USA, MS_USA, MO_USA, MT_USA, NE_USA, NV_USA,
              NH_USA, NJ_USA, NM_USA, NY_USA, NC_USA, ND_USA, OH_USA, OK_USA, OR_USA, PA_USA, RI_USA, SC_USA, SD_USA,
              TN_USA, TX_USA, UT_USA, VT_USA, VA_USA, WA_USA, WV_USA, WI_USA, WY_USA ]
    TransportService:
      type: string
      enum: [ LTL, FTL ]
    Vendor:
      required: [ vendorStatus, headOffice, contacts, flag1099Required, contractOnFile, isSameReceivable, isSameInsurance ]
      type: object
      properties:
        vendorId:
          type: integer
          format: int64
        vendorStatus:
          $ref: '#/components/schemas/BusinessStatus'
        thirdParty:
          $ref: '#/components/schemas/Enterprise'
        headOffice:
          $ref: '#/components/schemas/VendorBranch'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/VendorBranch'
        flag1099Required:
          type: boolean
        federalIdNumber:
          type: string
        contractOnFile:
          type: boolean
        mc:
          type: string
          pattern: '^\d{8}$'
        scac:
          type: string
          maxLength: 4
          minLength: 4
        usdot:
          type: string
          pattern: '^[0-9]{1,12}$'
        cadBondNumber:
          type: string
        usBondNumber:
          type: string
        ctpat:
          type: string
          pattern: '^\d{10}$'
        fastApproved:
          type: boolean
        hazmatNumber:
          type: string
          pattern: '^\d{1,8}$'
        reviewRating:
          type: number
        wcbNumber:
          type: string
          maxLength: 10
        smc3TarriffCode:
          type: string
        isSameReceivable:
          type: boolean
        isSameInsurance:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
    VendorBranch:
      required: [ branchName, enterprise ]
      type: object
      properties:
        vendorBranchId:
          type: integer
          format: int64
        branchName:
          type: string
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        bidOrders:
          type: array
          items:
            $ref: '#/components/schemas/BidOrderCenter'
        insuranceDetails:
          $ref: '#/components/schemas/InsuranceDetails'
        receivable:
          $ref: '#/components/schemas/Receivable'
    BidOrderCenter:
      type: object
      properties:
        bidOrderCenterId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        bidOrderCenterName:
          type: string
        isSatelliteTracker:
          type: boolean
        isTrackerOnAllTruck:
          type: boolean
        trackerProvider:
          type: string
        skidLength:
          type: number
        skidWidth:
          type: number
        skidHeight:
          type: number
        thresholdHeight:
          type: number
        thresholdLength:
          type: number
        thresholdWidth:
          type: number
        ceilingCube:
          type: number
        wallCube:
          type: number
        bidOrderContacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        transportServices:
          type: array
          items:
            $ref: '#/components/schemas/TransportService'
        accessoryCharges:
          type: array
          items:
            $ref: '#/components/schemas/AccessoryCharge'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
        deliveryServices:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryService'
        dedicatedServices:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryService'
    Receivable:
      type: object
      properties:
        receivableId:
          type: integer
          format: int64
        accountNumber:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        termOfPayment:
          type: integer
          format: int32
        isQuickPayProgram:
          type: boolean
        factoringCoName:
          type: string
        careOf:
          type: string
        mailingAddress:
          $ref: '#/components/schemas/Address'
        bankingInfo:
          $ref: '#/components/schemas/BankAccount'
        tradeReference:
          $ref: '#/components/schemas/CreditApplication'
        receivableApprovedBy:
          type: string
          maxLength: 255
        receivableStatus:
          $ref: '#/components/schemas/CreditStatus'
    Coordinate:
      required: [ coordinateName, longitude, latitude, radius ]
      type: object
      properties:
        coordinateId:
          type: integer
          format: int64
        coordinateName:
          type: string
          maxLength: 85
        location:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        radius:
          type: number
        radiusUnit:
          $ref: '#/components/schemas/RadiusUnit'
        directions:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
    Direction:
      type: string
      enum: [ ORG, DST ]
    RadiusUnit:
      type: string
      enum: [ KM, MI ]
    BoxType:
      type: string
      enum: [ CVAN, LTRK, FBED, LBOY, SDCK, DDRP, RGNK, CSTG, SKIT ]
